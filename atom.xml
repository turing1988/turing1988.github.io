<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Nankor Dream</title>
  <icon>https://www.gravatar.com/avatar/2ec36e8eec8406bdc27146495389bd46</icon>
  <subtitle>Nankor&#39;s Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.nankor.org/"/>
  <updated>2018-10-23T15:41:54.000Z</updated>
  <id>https://www.nankor.org/</id>
  
  <author>
    <name>nankor</name>
    <email>nankor1988@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>头像背后的故事</title>
    <link href="https://www.nankor.org/Think/10/23/%E5%A4%B4%E5%83%8F%E8%83%8C%E5%90%8E%E7%9A%84%E6%95%85%E4%BA%8B.html"/>
    <id>https://www.nankor.org/Think/10/23/头像背后的故事.html</id>
    <published>2018-10-23T15:41:55.000Z</published>
    <updated>2018-10-23T15:41:54.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>魏武挥:从上海的互联网产业说开去</title>
    <link href="https://www.nankor.org/Web/08/21/shanghai-web.html"/>
    <id>https://www.nankor.org/Web/08/21/shanghai-web.html</id>
    <published>2013-08-21T10:44:05.000Z</published>
    <updated>2017-06-18T17:22:52.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://weiwuhui.com/5607.html">原文地址 http://weiwuhui.com/5607.html</a></p><p>近日，网络上开始传一个流言（未经证实或证伪）：阿里巴巴会同湖南卫视（后又传为会同苏宁）拿下了PPTV。如果这个消息属实，就意味着又一家上海的互联网公司被并购。事实上，上海做得略有名气的互联网公司本来就不多，在这不多的公司中，先后有易趣、土豆、PPS、一号店、Triniti Interactive被收购，如今，名单上可能又会多上一个。</p><span id="more"></span><p>上海成名的网络公司大致有如下一些：</p><p>盛大、携程算是巨头，但都总让人感觉缺少锐气，盛大连市场第三的位置都快要朝不保夕，携程则需要早就躲到美国逍遥的梁建章回来再撑大局。</p><p>麦考林虽有“中国电商第一股”的头衔，但它的股价下滑业绩困顿，是所有人都看得见的；淘米借着6-10岁网民飞速增长而一度很风光，现在股价也在低位。</p><p>亿唐更是早就消失不见，九城失去魔兽后苦苦挣扎，久游、五分钟一蹶不振。</p><p>至于篱笆、百姓，做得的确不错，但毕竟是本地网站，在外埠影响有限。</p><p>当下，在市场中还算活跃表现尚佳的有安居客、世纪佳缘、大众点评和verycd，不过都是某一个细分行业的网络公司。后两者其实存在成为“名单”上的可能。</p><p>上海至今没有出现过平台级的互联网公司，也的确缺少网络创业公司（有但不是那么多）。可上海人口众多、经济发达、互联网基础设施也相当不赖。这组矛盾看似很怪异，曾有流言说，上海官方一度反思为什么阿里巴巴没有诞生在上海。不过这轮反思如果有的话，似乎也不见什么反思的效果。</p><p>有一些似是而非的原因，我先拿出来驳斥一下：</p><p>其一，上海人没有创业精神。对于本土上海人，的确有这种情况。但上海其实早就是一个移民城市，我所居住的楼盘，上上下下，几乎全是“新上海人”。所以，即便本土上海人不愿意创业，也不能说明全部上海的居住人群不愿意创业。上海的高校之多全国首屈一指，毕业生非上海人多了去了。</p><p>其二，上海人排外，于是留在上海的新上海人缺乏帮助。作为一个上海人，我承认上海有排外的情况，但我必须要说的是：任何一个城市都有排外的情绪，上海不见得特别严重——尤其是最近十来年。正是因为认知到了这一点，我和我的妻子虽然都是上海人，但我的儿子不会说上海话，我毫不担心他将来会被“排外”出去——说实话，学好英语是正经的，哈</p><p>其三，上海创业成本太高，无论是房租还是员工工资。有一点我承认，上海这个地方比较守法，什么拖欠三金之类的事，一般一告一个准，这客观上会抬升创业成本。不过我想，创个业还要持续地做这种勾当（偶尔来这么几个月，正常），也不是个事。更重要的是，中国一线城市：北上广深，哪个地方成本低？尤其是北京，很多事你有钱都解决不了。你没个北京户口或公司没交过税能买车么？</p><p>所以，这些都不是上海产生不了牛逼网络公司的原因。真正的原因在以下几个方面：</p><p>其一、大学的布局与规划，造成了最有可能创业的人群——大学生，很难进行创业。</p><p>北京有两所顶尖高校：北大清华，上海也有两所顶尖高校：复旦交大。北大复旦偏文，清华交大偏理。北大清华都在中关村一带，处于闹市之中，产业界和校园沟通相对方便。但上海呢，偏文的复旦倒是在市区，但偏理的交大却躲在闵行这个被戏称为闵大荒的地方。交大本部倒是依然留在市中心，不过那个地方是搞成人教育的，旁边一个管理学院也在市中心，不过管理学院不培养创业者。上海若干个大学城的规划，导致上海校园和业界距离极远。有时候我想请人来学校做个讲座，朋友帮忙，钱就不给了，但那个开车都要一个小时的路程，让我羞于提出这样的要求。</p><p>其二、上海不是一个扎堆的城市。</p><p>其实创业是一件很“神经病”的事，在很多人的眼里，放着好好的工作不要，去赌一个概率很小的未来，不是神经病是什么。创业的路大多数时候充满着艰辛，情感慰藉其实很重要。只有创业者才能理解创业者，但上海恰恰缺少一个扎堆文化。在上海这个极其繁华的城市里，创业者却是极其孤独的。</p><p>其三、上海的生活太丰富了。</p><p>这是我朋友的一个观点，在他看来，虽然北京创业成本也很高，但北京其实并不适合生活，下班时分就是首堵，那就在公司再干一两个小时再走吧。可到了晚上其实又没啥地方可以去，那就再摆弄点事儿吧（或者去扎堆，北京扎堆文化相当浓厚，遥想当年5G流水席的盛况）。但上海恰恰不是，上海有大把的地方可以让你去消遣，一个不夜的繁华地，对创业者和ta的创业团队，是一个不利因素。</p><p>其四、上海人对新的东西能包容，但接受度并不高。</p><p>这件事可能会有一定的违和感，但我用一个例子说明。</p><p>10年年中，我所在的学院和新浪合作，进行了一次大规模的微博用户随机抽样调研，其中有一个发现非常有趣：用户量最高的地方是：北京、广东、浙江、江苏和福建。是的，没有上海。09年新浪微博内测，在一年之后，上海在整个微博的用户量盘子里，都不是前五位的。新生事物在上海不会被排斥，但也不会被立刻接受，尤其不会因为朋友接受了我也接受。网络公司虽然做的是所谓没有疆界的生意，但依然有其地域性。在上海去宣传一个新东西，人带人的连环效应很小。这也是很多中国企业品牌，在解决了多个地方的占有率问题之后，才会考虑去拿下上海市场的原因。</p><p>其五、上海虽然有金融中心之谓，但其实不是VC聚集之地。</p><p>上海的这个金融中心很有趣，大把银行在这里，不过大多数银行总部并不在这里。很多投资人会在上海，但投资机构的HEAD还是在北京。尤其是上海做天使、A轮的，并不多。有一个发明了pre-angle名词的投资人，倒是base在上海，不过这个家伙满世界乱转，一度就是京沪两地打飞的的人。这个原因和上海创业项目少，互为因果。</p><p>其六、上海这个城市，太过成熟。</p><p>在上海找工作，相对容易一些，而且上海的平均薪资也不低。老实讲，虽然有不少创业者是主动创业，但其实也有不少创业者是被逼的。上海很多年前有“冒险家的乐园”这个称号，今天早就不是。要冒险，不用来上海。这个城市已经方方面面都成熟到，并不适合冒险。</p><p>其七，上海的高科技园之类的规划，摆明了就不是给创业用的。</p><p>比如张江这个地方。这个地方现在已经很热闹了，但已经是大公司聚集之地。早期不热闹的时候，其实也不是什么创业者的乐土：它是凭空在一个很荒芜的地方圈地做的，生活配套设施极少。我前文提到的交大所在的闵行，的确旁边就有一个紫竹园区，和张江园区，是一模一样的道理：规划得相当大气，道路一铺就是来回四根车道，但就是：平日里没有人影。</p><p>其八、上海的媒体，并不发达。</p><p>上海好多年前，进行过一次媒体的整合，把大大小小的媒体归为解放、文新、文广三大集团。这个整合之后，上海的主要媒体都被列入体制之内。这些媒体的报道一般倾向于中规中矩，对于新鲜事物、创业公司，关注很少。创业者缺少被关注的机会。</p><p>上海已经不太可能成为中国的“硅谷”，不过最近上海官方很重视“大数据”这个事，这个事从逻辑上对上海而言是成立的：它需要较高的投入：财力、人力、物力。上海还是有这个本钱的。大数据产业是未来互联网很多公司的支撑，上海即使诞生不了台面上风光无限的平台级公司，存在这个可能产生冰山下的公司：虽不知名但极其重要。当然，仅是逻辑上是成立的。</p><p>稍许展望一下，未来最有可能成为中国硅谷的地方是哪里？</p><p>我排除了杭州。杭州虽然有阿里巴巴，但江浙一带，做小生意的自古有之，阿里巴巴只是占了地利人和。江浙一带，很难出现大规模的数量较多的平台级公司。单靠阿里一家，不能说杭州能成其为硅谷。</p><p>其实我也排除了北京，说到底北京这个地方，还是成本太高。我前文所提及的在北京创业的理由，恰恰是北京政府要解决的问题：一个城市不利于生活总不是个事。随着这些问题的解决，北京创业成本太高的弱势，就会显现出现——虽然，在今天，中国的“硅谷”可能真在北京。</p><p>广州行不行？广州其实不是一个移民城市，IT行当说穿了是高风险的行当，和当年挖金矿没什么两样（所以硅谷在加利福尼亚），高风险行当通常在移民城市里比较旺盛。广州之所以在中国互联网产业里拔得头筹，和当年广东电信那帮人很有关系。</p><p>一个孵化器天奇基金的合伙人和我聊了一下，在她看来，深圳这个地方，具备中国未来硅谷的可能。它是一个移民城市，气候宜人适合思考（不要小看这点，嘿嘿），虽然这个地方没有什么特别厉害的大学，但它有特别厉害的科技公司，容易培养出创业的人才。深圳注册公司相对而言手续简单，还有一点很重要：中国的纳斯达克，在深圳。——我对她的看法，基本倾向于同意。</p><p>至于上海，可以说，整个内陆地区，最像香港的地方，就是上海。而香港的互联网产业，可以用这两个字来形容：贫瘠，其实不用指望上海成为中国硅谷了。</p><p>—— 钛媒体 供稿 ——</p><p>后记：其实上海成不了中国硅谷或者成不了创业乐土，也没啥。我写这篇东西根本无意去从价值判断上批评什么。成不了，so what？上海成为中国的纽约是有可能的，也没啥不好</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://weiwuhui.com/5607.html&quot;&gt;原文地址 http://weiwuhui.com/5607.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;近日，网络上开始传一个流言（未经证实或证伪）：阿里巴巴会同湖南卫视（后又传为会同苏宁）拿下了PPTV。如果这个消息属实，就意味着又一家上海的互联网公司被并购。事实上，上海做得略有名气的互联网公司本来就不多，在这不多的公司中，先后有易趣、土豆、PPS、一号店、Triniti Interactive被收购，如今，名单上可能又会多上一个。&lt;/p&gt;
    
    </summary>
    
      <category term="Web" scheme="https://www.nankor.org/categories/Web/"/>
    
    
      <category term="互联网" scheme="https://www.nankor.org/tags/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
      <category term="上海" scheme="https://www.nankor.org/tags/%E4%B8%8A%E6%B5%B7/"/>
    
  </entry>
  
  <entry>
    <title>C++智能指针漫谈</title>
    <link href="https://www.nankor.org/Program/08/19/about-c++-smart-ptr.html"/>
    <id>https://www.nankor.org/Program/08/19/about-c++-smart-ptr.html</id>
    <published>2013-08-19T05:32:33.000Z</published>
    <updated>2017-06-18T15:27:08.529Z</updated>
    
    <content type="html"><![CDATA[<p>关于C++智能指针三篇文章</p><span id="more"></span><p><a href="http://my.oschina.net/sulliy/blog/79991">C++智能指针漫谈[上]</a></p><p><a href="http://my.oschina.net/sulliy/blog/79993">C++智能指针漫谈[中]</a></p><p><a href="http://my.oschina.net/sulliy/blog/79995">C++智能指针漫谈[下]</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于C++智能指针三篇文章&lt;/p&gt;
    
    </summary>
    
      <category term="Program" scheme="https://www.nankor.org/categories/Program/"/>
    
    
      <category term="c++" scheme="https://www.nankor.org/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>关于Vim添加文件末尾空行</title>
    <link href="https://www.nankor.org/Program/08/18/avoid-inserting-blank-line-by-vim.html"/>
    <id>https://www.nankor.org/Program/08/18/avoid-inserting-blank-line-by-vim.html</id>
    <published>2013-08-18T03:33:05.000Z</published>
    <updated>2017-06-18T15:27:08.529Z</updated>
    
    <content type="html"><![CDATA[<p>今天使用hexo编辑link类型的文章，发现总是不能良好的转换，查明原因原来是vim在编辑保存markdown文件后在末尾加入空行所致。<span id="more"></span></p><p>Link类型markdown文件经过<code>hexo generate</code>不能成功装换为html静态页面，使用vimdiff仔细对比了模板文件与修改后的文件除了内容区别外，没有格式上的差别，却总是转换不成功。只好使用meld做对比，把meld的空行与空白字符对比选项打开，发现经过vim修改的文件在末尾被自动添加了换行，即多一个空行。将该空行删除，转换成功了。</p><p>vim这时做了什么？<br>查看vim的eol或者endofilne帮助选项:<br><code>:help eol</code></p><blockquote><p><em>‘endofline’</em> <em>‘eol’</em> <em>‘noendofline’</em> <em>‘noeol’</em><br>‘endofline’ ‘eol’布尔型(缺省打开)<br>局部于缓冲区<br>{Vi 无此功能}</p></blockquote><blockquote><p>写入文件时如果关闭本选项并且打开 ‘binary’ 选项，文件的末行不写入&lt;EOL&gt;。编辑新文件时自动打开本选项，除非该文件的末行本没有&lt;EOL&gt;，那时本选项被复位。通常你不需要自己置位或者复位本选项。如果 ‘binary’ 关闭，写入文件时不使用本值。如果 ‘binary’ 打开，本值被用于记住文件末行是否存在&lt;EOL&gt;，这样在写回文件时，就不会改变原来文件的使用方式。不过如果你愿意改变之，可自便。</p></blockquote><p>由此看来，vim默认会在写入文件时在文件末尾插入&lt;EOL&gt;,以表示文件结束。每次编辑新文件时，自动打开’eol’选项，除非文件的末行本没有&lt;EOL&gt;，那时不自动添加&lt;EOL&gt;。</p><p><strong>如果’binary’关闭，写入文件时不使用&lt;EOL&gt;.</strong></p><p><strong>如果’binary’ 打开，’eol’被用于记住文件末行是否存在&lt;EOL&gt;，这样在写回文件时，就不会改变原来文件的方式</strong></p><p><strong>如果关闭’eol’并且打开’binary’选项，文件的末行不写入&lt;EOL&gt;</strong></p><p>如此，如果不想vim编辑文件时在末行添加空行，只要修改vimrc就可以了：</p><p><code>set noendofline binary</code></p><p>(完)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天使用hexo编辑link类型的文章，发现总是不能良好的转换，查明原因原来是vim在编辑保存markdown文件后在末尾加入空行所致。
    
    </summary>
    
      <category term="Program" scheme="https://www.nankor.org/categories/Program/"/>
    
    
      <category term="vim" scheme="https://www.nankor.org/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>怎样才算会一门编程语言</title>
    <link href="https://www.nankor.org/Program/08/18/master-a-language.html"/>
    <id>https://www.nankor.org/Program/08/18/master-a-language.html</id>
    <published>2013-08-18T02:52:08.000Z</published>
    <updated>2017-06-18T15:27:08.529Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="Program" scheme="https://www.nankor.org/categories/Program/"/>
    
    
  </entry>
  
  <entry>
    <title>U盘只读文件系统</title>
    <link href="https://www.nankor.org/Linux/06/09/u-disk-only-read-filesystem.html"/>
    <id>https://www.nankor.org/Linux/06/09/u-disk-only-read-filesystem.html</id>
    <published>2013-06-08T16:04:52.000Z</published>
    <updated>2017-06-18T15:27:08.529Z</updated>
    
    <content type="html"><![CDATA[<p>Linux下使用U盘时，在没有卸载的情况下擅自拔出U盘后，U盘成为只读文件系统，说下修复的办法。<span id="more"></span></p><p>环境：</p><pre><code>OS: Linux  3.9.4-1-ARCHU盘：FAT32</code></pre><p>今天向U盘上拷了文件后，没有卸载就拔了U盘，再插上电脑，稍等片刻时，发现成为只读文件系统。尝试使用<code>sudo chmod a+w /U</code>，显示为只读文件系统。只好查看打印的系统信息</p><p>查看系统打印信息：</p><pre><code>$ demsg | less</code></pre><p>看到如下内容：</p><pre>[29153.253989] usb 2-1.2.3.3: new full-speed USB device number 40 using ehci-pci[29153.423524] usb 2-1.2.3.3: not running at top speed; connect to a high speed hub[29153.431450] scsi20 : usb-storage 2-1.2.3.3:1.0[29154.435792] scsi 20:0:0:0: Direct-Access     Generic  Flash Disk       8.07 PQ: 0 ANSI: 2[29154.437255] sd 20:0:0:0: [sdb] 8212480 512-byte logical blocks: (4.20 GB/3.91 GiB)[29154.438207] sd 20:0:0:0: [sdb] Write Protect is off[29154.438214] sd 20:0:0:0: [sdb] Mode Sense: 03 00 00 00[29154.438930] sd 20:0:0:0: [sdb] No Caching mode page present[29154.438934] sd 20:0:0:0: [sdb] Assuming drive cache: write through[29154.442123] sd 20:0:0:0: [sdb] No Caching mode page present[29154.442128] sd 20:0:0:0: [sdb] Assuming drive cache: write through[29154.473636]  sdb: sdb1[29154.476380] sd 20:0:0:0: [sdb] No Caching mode page present[29154.476388] sd 20:0:0:0: [sdb] Assuming drive cache: write through[29154.476404] sd 20:0:0:0: [sdb] Attached SCSI removable disk[29155.527602] FAT-fs (sdb1): Volume was not properly unmounted. Some data may be corrupt. Please run fsck.[29167.626139] FAT-fs (sdb1): error, fat_get_cluster: invalid cluster chain (i_pos 2111071)[29167.626143] FAT-fs (sdb1): Filesystem has been set read-only[29167.626154] FAT-fs (sdb1): error, fat_get_cluster: invalid cluster chain (i_pos 2111071)</pre><p>写的很明白，被不适当的卸载造成有些数据错误，请使用fsck修复。</p><p>使用fsck修复：（sdb1是U盘的分区）</p><pre><code>$ sudo fsck -fy /dev/sdb1</code></pre><p>含义:肯定回答修复损坏的扇区，保险起见可以不加f与y。</p><p>修复后，正常卸载U盘，再插上U盘：</p><pre><code>$ dmesg | less</code></pre><p>看到：</p><pre>[29665.364058] usb 2-1.2.3.3: new full-speed USB device number 43 using ehci-pci[29665.543688] usb 2-1.2.3.3: not running at top speed; connect to a high speed hub[29665.551693] scsi23 : usb-storage 2-1.2.3.3:1.0[29666.555758] scsi 23:0:0:0: Direct-Access     Generic  Flash Disk       8.07 PQ: 0 ANSI: 2[29666.557362] sd 23:0:0:0: [sdb] 8212480 512-byte logical blocks: (4.20 GB/3.91 GiB)[29666.557984] sd 23:0:0:0: [sdb] Write Protect is off[29666.557987] sd 23:0:0:0: [sdb] Mode Sense: 03 00 00 00[29666.558605] sd 23:0:0:0: [sdb] No Caching mode page present[29666.558608] sd 23:0:0:0: [sdb] Assuming drive cache: write through[29666.561606] sd 23:0:0:0: [sdb] No Caching mode page present[29666.561609] sd 23:0:0:0: [sdb] Assuming drive cache: write through[29666.893013]  sdb: sdb1[29666.895352] sd 23:0:0:0: [sdb] No Caching mode page present[29666.895357] sd 23:0:0:0: [sdb] Assuming drive cache: write through[29666.895361] sd 23:0:0:0: [sdb] Attached SCSI removable disk</pre><p>打开U盘，可以正常读写了。</p><p>（完）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux下使用U盘时，在没有卸载的情况下擅自拔出U盘后，U盘成为只读文件系统，说下修复的办法。
    
    </summary>
    
      <category term="Linux" scheme="https://www.nankor.org/categories/Linux/"/>
    
    
      <category term="archlinux" scheme="https://www.nankor.org/tags/archlinux/"/>
    
      <category term="linux" scheme="https://www.nankor.org/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>激进的archlinux</title>
    <link href="https://www.nankor.org/Linux/06/04/radical-archlinux.html"/>
    <id>https://www.nankor.org/Linux/06/04/radical-archlinux.html</id>
    <published>2013-06-04T03:43:05.000Z</published>
    <updated>2017-06-18T15:27:08.529Z</updated>
    
    <content type="html"><![CDATA[<p>今天查看feedly，突然看到arch关于更新的通知，不得不惊叹，arch的激进主义！<span id="more"></span></p><p><a href="https://www.archlinux.org/news/binaries-move-to-usrbin-requiring-update-intervention/">原文</a>,<br>翻译如下：</p><p>在您下次更新时，你将得到如下的错误信息：</p><pre><code>error: failed to commit transaction (conflicting files)filesystem: /bin exists in filesystem</code></pre><p>这次更新把所有二进制文件都转移至统一的目录&#x2F;usr&#x2F;bin。移除这个 二进制文件的存放位置的差别对arch系统没有太大影响，但是却简化了开发团队的包维护工作。你可以参考这篇<a href="https://mailman.archlinux.org/pipermail/arch-dev-public/2012-March/022625.html">文章</a>来得到这次变化的进一步解释。</p><p>按照以下说明，进行安全更新：</p><ol><li>整理&#x2F;bin &#x2F;sbin &#x2F;usr&#x2F;bin目录下的所有非官方源安装包，把它们放进&#x2F;usr&#x2F;bin目录下。按照以下方法可以得到需要整理的非官方源的安装包清单：<br> $ pacman -Qqo &#x2F;bin &#x2F;sbin &#x2F;usr&#x2F;sbin | pacman -Qm -</li></ol><p>也可以使用如下方法检查识别非官方源的安装包：<br>    $ paclist <repo> | awk ‘ { print $1 } ‘ | pacman -Ql - | grep ‘ &#x2F;s?bin&#x2F;| &#x2F;usr&#x2F;sbin&#x2F;‘</p><ol start="2"><li><p>确保任何一个在IgnorePkg或IgnoreGroup中的安装包没有相关的文件放置在&#x2F;bin、&#x2F;sbin或&#x2F;usr&#x2F;bin目录下。如果需要，整理修复这些软件包</p></li><li><p>如果您有一些不被任何安装包拥有的文件放置在&#x2F;bin &#x2F;sbin &#x2F;usr&#x2F;bin目录下，您需要移除他们。使用如下方法得到这类文件清单：<br> $ find &#x2F;bin &#x2F;sbin &#x2F;usr&#x2F;sbin -exec pacman -Qo – { } + &gt;&#x2F;dev&#x2F;null</p></li><li><p>如果您使用了autofs，确保所有分区被挂载，因为在稍后的更新中它们可能不会自动挂载。</p></li><li><p>升级系统</p></li></ol><p>在执行更新之前，你可能需要确保你有一个备用的具有root权限的终端,比如在这些情况下：用于不常见的系统修复，尤其是通过ssh进行远程升级。可以如下做：<br>    #pacman -Syu –ignore filesystem,bash<br>    #pacman -S bash<br>    #pacman -Su</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天查看feedly，突然看到arch关于更新的通知，不得不惊叹，arch的激进主义！
    
    </summary>
    
      <category term="Linux" scheme="https://www.nankor.org/categories/Linux/"/>
    
    
      <category term="archlinux" scheme="https://www.nankor.org/tags/archlinux/"/>
    
  </entry>
  
  <entry>
    <title>HHKB Lite2 in my work place</title>
    <link href="https://www.nankor.org/Linux/05/31/work-place.html"/>
    <id>https://www.nankor.org/Linux/05/31/work-place.html</id>
    <published>2013-05-31T14:42:13.000Z</published>
    <updated>2017-06-18T15:27:08.529Z</updated>
    
    <content type="html"><![CDATA[<p>那天看到hhkb，我发现好熟悉啊，突然想起待的地方有一块，今天找剥线钳的时候，正好发现了这个Lite2。<span id="more"></span></p><p>Lite2虽然不是电容的，不过薄膜的手感也不错，敲起来有中木头的感觉。这都是次要的，关键是作为Vim党，发觉ctrl的位置真是太爽了。</p><p>ctrl按键在shift上方，使用vim过程中，缩短了ctrl与escape的键程，这还求什么呢？</p><p>啥都不说，先上张lite2的图吧！</p><p><img src="http://nankor.org/uploads/2013/05/lite202.jpg" alt="Lite2 俯视图"></p><p>桌子上还有另两个键盘，对比一下，屌丝与高富帅一览无余！</p><p><img src="http://nankor.org/uploads/2013/05/lite203.jpg" alt="three kb"></p><p>完</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;那天看到hhkb，我发现好熟悉啊，突然想起待的地方有一块，今天找剥线钳的时候，正好发现了这个Lite2。
    
    </summary>
    
      <category term="Linux" scheme="https://www.nankor.org/categories/Linux/"/>
    
    
      <category term="HHKB" scheme="https://www.nankor.org/tags/HHKB/"/>
    
      <category term="Linux" scheme="https://www.nankor.org/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>一些有趣的事情关于android和网络</title>
    <link href="https://www.nankor.org/Linux/05/12/some-interesting-thing-about-net-on-android-and-pc.html"/>
    <id>https://www.nankor.org/Linux/05/12/some-interesting-thing-about-net-on-android-and-pc.html</id>
    <published>2013-05-12T07:58:07.000Z</published>
    <updated>2017-06-18T15:27:08.529Z</updated>
    
    <content type="html"><![CDATA[<p>折腾的是小米1 android，我承认我是想把一切设备PC化。如果你的android没有root，不支持挂载loop设备，请出门左拐。<span id="more"></span></p><p>##内部网络##</p><p>android使用内部网络（校园网，不是AP），现在无线方式可以的已经有3种了，分别对应手机端拨号、手机端不拨号。前提么，肯定要改得了android的mac。</p><p>主要说下第一种，第二种我想稍微知道内部网络原理的人都能想到；第三种是某些地点才可以的，网页拨号。</p><ul><li><p>第一种：使用linux_on_android+android+拨号软件+修改后的mac waln0, 可以了。</p></li><li><p>第二种：自己想吧</p></li><li><p>第三种：很特殊，连接xd_wlan，连接，连接，请连接!（《连接内部网络 专家编程》？！）</p></li></ul><p>##扩充键鼠##</p><p>小米1 不支持OTG，KT CPU都有OTG pin的，唉，小米买的早了！</p><p>只好选择蓝牙键盘，从淘宝上淘的:</p><p><img src="http://nankor.org/uploads/2013/05/keyboard.jpg" alt="蓝牙键盘"></p><p>第一行功能键大都可以用，令人很欣慰啊!</p><p>目前我是一台台式机，一台本，本子上还没工作环境。。。有时候需要查看台式机上的工作代码或者环境,都是ssh+vnc，拿个本去操作太费劲了。手机ssh的作用凸显了，浏览个代码什么的。host_vim指ssh服务器端vim</p><p>好了 </p><pre><code>小米 + 蓝牙键盘 + linux_on_android + ssh+host_vim + git + synergy = PC</code></pre><p>或者，换个搭配</p><pre><code>小米 + 蓝牙键盘 + terminal IDE+ssh + host_vim</code></pre><p>或者</p><pre><code>小米 + 蓝牙键盘 + connectbot + host_vim</code></pre><p>或者</p><pre><code>小米 + 蓝牙键盘 + vimtouch + connect</code></pre><p>或者</p><pre><code>小米 + 蓝牙键盘 + git clone host repo url + vimtouch</code></pre><p>但都没第一种方便，没有第一种的环境纯正。</p><p>这里有截了几张图：</p><p>输入 sl ,呵呵 :</p><pre><code>$ sl</code></pre><p><img src="http://nankor.org/uploads/2013/05/sl1.png" alt="train start "></p><p><img src="http://nankor.org/uploads/2013/05/sl2.png" alt="train tail "></p><p>看下机子的信息吧：</p><pre><code>$ cat /etc/issue $ uname -a $ haed -n10 /proc/cpuinfo</code></pre><p><img src="http://nankor.org/uploads/2013/05/arch.png" alt="xiaomi ubuntu 12.04 info"></p><p>##NFS看视频##</p><p>甭提sftp，看PC端视频卡！</p><p>ssh fs， ssh加密压缩传输，更卡！</p><p>而NFS的速度是相对比较快的．</p><p>PC samba server + android samba client  + video player。</p><p>完</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;折腾的是小米1 android，我承认我是想把一切设备PC化。如果你的android没有root，不支持挂载loop设备，请出门左拐。
    
    </summary>
    
      <category term="Linux" scheme="https://www.nankor.org/categories/Linux/"/>
    
    
      <category term="vim" scheme="https://www.nankor.org/tags/vim/"/>
    
      <category term="hack" scheme="https://www.nankor.org/tags/hack/"/>
    
      <category term="android" scheme="https://www.nankor.org/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>交叉编译gdb</title>
    <link href="https://www.nankor.org/Linux/05/08/cross-complie-gdb.html"/>
    <id>https://www.nankor.org/Linux/05/08/cross-complie-gdb.html</id>
    <published>2013-05-08T13:53:11.000Z</published>
    <updated>2017-06-18T15:27:08.529Z</updated>
    
    <content type="html"><![CDATA[<p>项目需要，交叉编译本地版gdb 6.5 <span id="more"></span></p><h2 id="预读"><a href="#预读" class="headerlink" title="预读"></a>预读</h2><p>首先明确configure的三个参数:</p><p>–build : 运行交叉编译器的环境</p><p>–host : 编译出的可执行文件的执行环境</p><p>–target : 编译出的可执行文件执行后能产生的文件的执行环境</p><p>所有值默认都等于–build，–build默认为本机环境，–target默认为–host</p><p>比如 在gcc源码目录：</p><p>   $ .&#x2F;configure  CC&#x3D;arm-linux-gcc –build&#x3D;i686-pc-linux –host&#x3D;arm-linux –target&#x3D;mips</p><p>在intel pc上编译产生arm上运行的gcc，在arm平台运用产生的gcc编译mips上执行的程序</p><h2 id="0-嵌入式应用gdb调试"><a href="#0-嵌入式应用gdb调试" class="headerlink" title="0. 嵌入式应用gdb调试"></a>0. 嵌入式应用gdb调试</h2><p>嵌入式应用gdb调试主要有两种方法：</p><h3 id="PC端调试"><a href="#PC端调试" class="headerlink" title="PC端调试"></a>PC端调试</h3><p>这是主流方法，进入gdb目录，交叉编译时.&#x2F;configure 重要参数</p><pre><code>--build=i686-pc-linux--host=i686-pc-linux--target=arm-linux</code></pre><p>交叉编译产生的arm-linux-gdb在PC端运行</p><p>进入gdbserver目录，交叉编译.&#x2F;configure 时重要参数：</p><pre><code>--build=i686-pc-linux--host=arm-linux--target=arm-linux</code></pre><p>交叉编译产生的gdbserver放在arm设备上</p><p>过程：调试时，arm设备上打开gdbserver，附加至应用程序进程，在PC端通过arm-linux-gdb设置端口连接gdbserver调试。整个过程两者间通信类似于CS架构通信</p><p>arm-linux-gdb功能有限，一般可采用PC端的gdb代替之进行调试；另外PC和设备之间需要至少一种方式通信，串口与网络皆可，关于gdbserver通过串口调试方法，可自行搜索；由于作者所用设备只能通过串口调试，且串口有其他调试信息输出，故不采用此方式。</p><h3 id="设备本地gdb调试"><a href="#设备本地gdb调试" class="headerlink" title="设备本地gdb调试"></a>设备本地gdb调试</h3><p>交叉编译时.&#x2F;configure 的重要参数</p><pre><code>CC=arm-linux-gcc--build=i686-pc-linux--host=arm-linux--target=arm-linux</code></pre><p>过程：交叉编译产生arm设备上运行的gdb，直接在arm设备上运行gdb，调试应用程序。</p><p>本文主要讨论此种方法。</p><h2 id="1-交叉编译本地版gdb"><a href="#1-交叉编译本地版gdb" class="headerlink" title="1. 交叉编译本地版gdb"></a>1. 交叉编译本地版gdb</h2><p>交叉编译gdb时，与PC端的arm-linux-gcc的版本是相关的，过低版本的arm-linux-gcc不能交叉编译版本太高的gdb，本机的编译环境如下：</p><pre><code>arm-linux-gcc：4.3.2 gdb-src ：6.5 libncurses ：5.6arm-linux : 2.6.34</code></pre><p>下载：</p><p><a href="http://ftp.gnu.org/gnu/gdb/gdb-6.5a.tar.gz">gdb 6.5a</a></p><p><a href="http://ftp.gnu.org/pub/gnu/ncurses/ncurses-5.6.tar.gz">ncurses</a></p><p>由于gdb依赖于termcap库，现在这个库可以通过ncurses来代替，所以先交叉编译产生libncurses，我选择的5.6版本</p><h3 id="交叉编译ncurses"><a href="#交叉编译ncurses" class="headerlink" title="交叉编译ncurses"></a>交叉编译ncurses</h3><p><strong>解压</strong></p><pre><code>$ tar zxvf ncurses-5.6.tar.gz$ cd ncurses-5.6 </code></pre><p><strong>配置环境</strong></p><pre><code>$ CC=arm-linux-gcc ./configure --build=i686-pc-linux --host=arm-linux  --prefix=$HOME/arm/ncurses --without-ada --enable-termcap --with-shared</code></pre><p>以上产生Makefile，其中.&#x2F;configure 参数含义：</p><p>CC&#x3D;arm-linux-gcc 使用arm-linux-gcc交叉编译器</p><p>–prefix&#x3D;$HOME&#x2F;arm&#x2F;ncurses 将生成ncurses的相关文件安装在$HOME&#x2F;arm&#x2F;ncurses目录下</p><p>–without-ada 不编译ada库</p><p>–enable-termcap 支持termcap，这个很重要</p><p>–with-shared 以动态库形式封装libncurses</p><p><strong>make</strong></p><pre><code>$ make</code></pre><p><strong>make install</strong></p><pre><code>$ make install</code></pre><p>然后在$HOME&#x2F;arm&#x2F;ncurses看到如下文件：</p><pre>ncurses/ ├── bin │   ├── captoinfo -> tic │   ├── clear │   ├── infocmp │   ├── infotocap -> tic │   ├── ncurses5-config │   ├── reset -> tset │   ├── tack │   ├── tic │   ├── toe │   ├── tput │   └── tset ├── include │   └── ncurses ├── lib │   ├── libform.a │   ├── libform_g.a │   ├── libform.so -> libform.so.5 │   ├── libform.so.5 -> libform.so.5.6 │   ├── libform.so.5.6 │   ├── libmenu.a │   ├── libmenu_g.a │   ├── libmenu.so -> libmenu.so.5 │   ├── libmenu.so.5 -> libmenu.so.5.6 │   ├── libmenu.so.5.6 │   ├── libncurses.a │   ├── libncurses++.a │   ├── libncurses_g.a │   ├── libncurses.so -> libncurses.so.5 │   ├── libncurses.so.5 -> libncurses.so.5.6 │   ├── libncurses.so.5.6 │   ├── libpanel.a │   ├── libpanel_g.a │   ├── libpanel.so -> libpanel.so.5 │   ├── libpanel.so.5 -> libpanel.so.5.6 │   ├── libpanel.so.5.6 │   └── terminfo -> ../share/terminfo ├── man │   ├── man1 │   ├── man3 │   ├── man5 │   └── man7 └── share     ├── tabset     └── terminfo</pre><h3 id="编译gdb"><a href="#编译gdb" class="headerlink" title="编译gdb"></a>编译gdb</h3><p><strong>.&#x2F;configure</strong></p><pre><code>$ CC=&#39;arm-linux-gcc&#39;  LDFLAGS=-L$HOME/arm/ncurses/lib CPPFLAGS=-I$HOME/arm/ncurses/include ./configure  --build=i686-pc-linux  --host=arm-linux --target=arm-linux --enable-shared --prefix=$HOME/arm/gdb --without-x --disable-gdbtk --disable-tui</code></pre><p>参数含义：</p><p>libncurses 路径</p><pre><code>LDFLAGS=-L$HOME/arm/ncurses/lib CPPFLAGS=-I$HOME/arm/ncurses/include</code></pre><p>–enable-shared    动态编译</p><p>–prefix&#x3D;$HOME&#x2F;arm&#x2F;gdb 安装目录</p><p>–without-x      取消x windows 支持 </p><p>–disable-gdbtk  取消gdbtk,应该也是图形界面相关的</p><p>–disable-tui    取消tui 界面</p><p>这点要说明一下，CC LDFLAGS CPPFLAGS这些编译参数本是放到.&#x2F;configure后的，但是当我放到.&#x2F;configure后提示错误：<code>configure: error: can only configure for one host and one target at a time</code> ，应该是configure的nonopt变量设置问题，我只好放到了前面，其实到后面会发现其是不起作用的。</p><p>以上生成Makefile</p><p><strong>make</strong></p><pre><code>$ make</code></pre><p>然后出现几个问题；</p><ul><li>no termcap library found</li></ul><p>明明添加了ncurses的库路径为什么不行？它既然是找libtermcap，给它在$HOME&#x2F;arm&#x2F;ncurses&#x2F;lib下建个指向libncurses.so的软连接</p><pre><code>$ ln -s $HOME/arm/ncurses/lib/libncurses.so $HOME/arm/ncurses/lib/libtermcap.so</code></pre><p>结果仍然提示上述错误。</p><p>这应该是configure时配置的FLAGS不起作用；</p><p>因此将上面的make修正为</p><pre><code>$ make LDFLAGS=-L$HOME/arm/ncurses/lib CPPFLAGS=-I$HOME/arm/ncurses/include</code></pre><p>编译顺利进行</p><ul><li>gdb&#x2F;gdb_curses.h头文件错误</li></ul><p>将代码修改为如下：</p><pre>    #if defined (HAVE_NCURSES_H)    #include <ncurses.h>    #elif defined (HAVE_CURSESX_H)    #include <cursesX.h>    #elif defined (HAVE_CURSES_H)    #include <curses.h>    #endif        #if defined (HAVE_TERM_H)    #include <term.h>    #else    /* On MinGW, a real termcap library is usually not present.  Stub versions       of the termcap functions will be built from win32-termcap.c.  Readline       provides its own extern declarations when there's no termcap.h; do the       same here for the termcap functions used in GDB.  */    extern int tgetnum (const char *);    #endif</pre><p>编译通过</p><p><strong>make install</strong></p><pre><code>$ make install</code></pre><p>安装后在$HOME&#x2F;arm&#x2F;gdb目录下会看到bin等目录，其下有 gdb gdbserver run三个文件，表示安装成功。</p><p>刚生成的gdb有10M左右，嵌入式设备Flash不大，可以将其strip下,减下肥</p><pre><code>$ arm-linux-strip gdb</code></pre><p>此时gdb只有2M多了</p><h3 id="放置gdb"><a href="#放置gdb" class="headerlink" title="放置gdb"></a>放置gdb</h3><p>将$HOME&#x2F;arm&#x2F;gdb&#x2F;bin&#x2F;gdb 拷贝至设备&#x2F;usr&#x2F;bin目录，将$HOME&#x2F;arm&#x2F;ncurses&#x2F;libncurse.so,libtermcap.so拷贝至设备&#x2F;usr&#x2F;lib目录即可</p><p>&lt; 完 &gt;</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;项目需要，交叉编译本地版gdb 6.5
    
    </summary>
    
      <category term="Linux" scheme="https://www.nankor.org/categories/Linux/"/>
    
    
      <category term="gdb" scheme="https://www.nankor.org/tags/gdb/"/>
    
      <category term="arm-linux" scheme="https://www.nankor.org/tags/arm-linux/"/>
    
  </entry>
  
  <entry>
    <title>识道</title>
    <link href="https://www.nankor.org/Think/03/26/tao.html"/>
    <id>https://www.nankor.org/Think/03/26/tao.html</id>
    <published>2013-03-25T16:18:55.000Z</published>
    <updated>2017-06-18T15:27:08.529Z</updated>
    
    <content type="html"><![CDATA[<p><big><strong>一篇薄文，送师兄、师姐毕业别离。</strong></big><span id="more"></span></p><center></center><center><big>**识，曾初识；**</big></center><br><center><big>**沧海一栗，惺惺相惜。**</big></center><br><center><big>**夜幕掩盖疯狂离愁、恣意挽留，识不出明日初升带欣喜；**</big></center><br><center><big>**无畏认知、豪壮诺语，于紊乱飞绪、铿锵醉言再回响；**</big></center><br><center><big>**这一天，永远过去**</big></center><br><br><br>    <center><big>**道，非常道；**</big> </center><br><center><big>**千古一系，沧桑正途；**</big> </center><br><center><big>**过往相携跋扈万里、横挺江山，道不明漫路修远将求索；**</big> </center><br><center><big>**囿涯智慧、苍茫岁月，随滴答流淌、激扬文字跃疆场；**</big> </center><br><center><big>**是结束，迎来开始**</big> </center><br><p>(完)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;big&gt;&lt;strong&gt;一篇薄文，送师兄、师姐毕业别离。&lt;/strong&gt;&lt;/big&gt;
    
    </summary>
    
      <category term="Think" scheme="https://www.nankor.org/categories/Think/"/>
    
    
      <category term="别离" scheme="https://www.nankor.org/tags/%E5%88%AB%E7%A6%BB/"/>
    
  </entry>
  
  <entry>
    <title>在linux下使用一些windows应用程序</title>
    <link href="https://www.nankor.org/Linux/03/23/how-to-use-some-windows-apps-in-linux.html"/>
    <id>https://www.nankor.org/Linux/03/23/how-to-use-some-windows-apps-in-linux.html</id>
    <published>2013-03-23T06:04:16.000Z</published>
    <updated>2017-06-18T15:27:08.529Z</updated>
    
    <content type="html"><![CDATA[<p>由于有些MS软件的私有格式、个别商业公司的利益驱动，在Linux下时使用一些软件时遇到一些问题。结合这两三年使用linux的经验，对win下个别软件在Linux下的使用，记录下自己的处理办法。<span id="more"></span></p><p>主要说如下几个<strong>Dota2</strong>、<strong>MS office</strong>、<strong>QQ</strong>、<strong>Edit PDF</strong>。</p><h3 id="Dota2"><a href="#Dota2" class="headerlink" title="Dota2"></a>Dota2</h3><p>本来不玩游戏的，可是打Dota做为宿舍每天的集体娱乐项目之一，不得不保留一下，每天也只是一刀。在linux下玩Dota本就不是一件难事，因为强大的wine。</p><p>魔兽争霸开发语言主要是JASS，暴雪自己的开发语言，与C++类似；界面设计使用delphi；插件脚本大部分采用Lua。Lua做为一种轻量级的解释型语言，可移植性相当之强。</p><p>wine做为Linux下windows的模拟环境，对于魔兽争霸的模拟已经足够了。</p><p>主要谈下使用wine玩Dota时遇到的一些问题。</p><p>1、 画面卡</p><p>使用openGL:<code>wine war3.exe -opengl</code></p><p>或者</p><p>修改wine注册表：在<code>HKEY_CURRENT_USER/Software/Blizzard Entertainment/Warcraft III/ </code>新建DWORD类型键值Gfx OpenGL，值为1。</p><p>2、分辨率不正常，无法全屏</p><p>如果想全屏：修改wine注册表 <code>HKEY_CURRENT_USER/Software/Blizzard Entertainment/Warcraft III/video </code>中的resheight和reswidth，将其修改为相应的屏幕分辨率（高 宽）即可。</p><p>3、 alt建冲突问题</p><p>Alt按键的冲突问题：Gnome下：系统-首选项-窗口，将移动按键由ALT改成super。KDE下：系统设置-窗口行为-窗口动作-修饰键由ALT改成Meta。</p><p>4、 无法启动 报错</p><p>export LANG&#x3D;zh_CN</p><h3 id="MS-amp-copy-Office-Visio"><a href="#MS-amp-copy-Office-Visio" class="headerlink" title="MS&amp;copy; Office Visio"></a>MS&amp;copy; Office Visio</h3><p>目前<a href="http://zh-cn.libreoffice.org/">LibreOffice&amp;copy;</a>对于MS&amp;copy; Office的兼容相比<a href="http://www.openoffice.org/zh-cn/">OpenOffice&amp;copy;</a>，做的已经很好了，但是使用LibreOffice Writer打开MS Word的doc后，在Win下重新打开时，文档格式会发生变化。因此不推荐在Linux下使用LibreOffice 编辑MS Office的私有格式文件。</p><p>####替代方法</p><ul><li><p>对于2003版 MS Word Excel Powerpoint，国内用户强烈推荐使用<a href="http://bbs.wps.cn/thread-22358932-1-1.html">WPS&amp;copy; for Linux</a>，目前已经开发至Beta了，界面风格与MS Office已几无差异，而且比较稳定。</p></li><li><p>对于2007版MS Office，推荐使用<a href="http://www.yozosoft.com/indexch.jsp">Linux 永中&amp;copy; Office</a>。</p></li></ul><p>####<strong>Visio</strong></p><p>Libreoffice Draw 3.5已经开始支持打开MS Visio,但是需要安装libvisio。</p><h3 id="QQ"><a href="#QQ" class="headerlink" title="QQ"></a>QQ</h3><p>关于QQ的使用，一直是初始linuxer最先遇到的问题，在过去有不同的插件完成，但随着TX对于QQ协议的疯狂升级，可使用的插件已所剩无几。最方便的是QQ的大多功能都可以保留。</p><p>webqq是种解决方案，但是用于传输文件时，速度奇慢，截图也是非常不方便。</p><p>我使用的是龍井的<a href="http://www.longene.org/forum/viewtopic.php?f=6&t=4700">wineqq2012 beta3</a> ;除了相互视频时有些问题，其他运行流畅，无重大bug。</p><h3 id="PDFXChange"><a href="#PDFXChange" class="headerlink" title="PDFXChange"></a>PDFXChange</h3><p>在Linux下修改已被封装PDF是件比较麻烦的事情。Linux下原生的可以通过Mupdf做简单修改，比如加书签。但是如果要修改内容，暂时还没有发现。</p><p>对于封装好的PDF，我使用的是wine下的<a href="http://www.soft711.com/html/PDF-XChangePro.html">PDFXchange2.04</a>。可对文档进行修改，以及增加水印、填写注释等等。</p><p>（完）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于有些MS软件的私有格式、个别商业公司的利益驱动，在Linux下时使用一些软件时遇到一些问题。结合这两三年使用linux的经验，对win下个别软件在Linux下的使用，记录下自己的处理办法。
    
    </summary>
    
      <category term="Linux" scheme="https://www.nankor.org/categories/Linux/"/>
    
    
      <category term="Dota" scheme="https://www.nankor.org/tags/Dota/"/>
    
      <category term="MS-office" scheme="https://www.nankor.org/tags/MS-office/"/>
    
      <category term="PDFXChange" scheme="https://www.nankor.org/tags/PDFXChange/"/>
    
      <category term="wineqq" scheme="https://www.nankor.org/tags/wineqq/"/>
    
  </entry>
  
  <entry>
    <title>代码管理之svn</title>
    <link href="https://www.nankor.org/Program/03/11/Code-management-with-svn.html"/>
    <id>https://www.nankor.org/Program/03/11/Code-management-with-svn.html</id>
    <published>2013-03-11T05:39:58.000Z</published>
    <updated>2017-06-18T15:27:08.529Z</updated>
    
    <content type="html"><![CDATA[<p>项目过程中需要规范代码,决定采用svn,(git 主要项目组内其他成员尚不熟悉，且当前已有多个项目在svn服务器中)，我也有机会对此作了一定程度的学习，在这里记下笔记。<span id="more"></span></p><blockquote><p><a href="http://subversion.apache.org/">Subversion</a>，简称 <strong>SVN</strong>，是一个开放源代码的版本控制系统，相对于的RCS、CVS，采用了分支管理系统，它的设计目标就是取代CVS。互联网上越来越多的控制服务从CVS转移到Subversion。</p></blockquote><p><a href="http://zh.wikipedia.org/wiki/Subversion">来源</a></p><p>SVN使用过程中我主要参考这本<a href="http://www.subversion.org.cn/svnbook/1.4/index.html">书</a>。</p><p>SVN改变了开发过程中代码版本迭代的过程，由传统的“锁定-修改-解锁”方案转变为“拷贝-修改-合并”方案。开发成员从中央版本库（服务器中）得到一份拷贝（又称为工作副本，在客户端）后，代码在每个开发成员手里都存在一份。因此每人都可以单独的修改自己工作副本中的代码，而不用在修改时顾及是否冲突，只要在合并时需要注意是否冲突；开发成员对代码并行修改，相对“锁定-修改-解锁”方案中的串行修改，大大加速了开发过程。</p><p>拷贝修改合并版本模型：</p><p><img src="http://www.subversion.org.cn/svnbook/1.4/images/ch02dia4.png" alt="拷贝修改合并"><br><img src="http://www.subversion.org.cn/svnbook/1.4/images/ch02dia5.png" alt="拷贝修改合并"></p><p>SVN客户端方面的工作周期包括：签出-&gt;修改[-&gt;更新]-&gt;提交[-&gt;合并],服务器方面，配置svn比较容易。关于svn客户端，我主要学习了两方面：基本操作与冲突解决。</p><p>##SVN基本操作</p><p>在项目中使用的命令也不多，涉及副本的签出、提交、更新、回滚；查看提交日志、修改内容、版本状态。</p><p>1.签出</p><pre><code>    svn checkout URL[@REV]... [PATH]</code></pre><p>默认从中央版本库签出最新版本至本地的工作副本，如果指定 REV，那么它确定了从 URL 首先查找的版本。</p><p>如果省略路径参数，则 URL 最末尾的目录名作为目标目录名。如果指定多个 URL，则依次将其签出到 PATH 的子目录中，子目录名就是 URL 最末尾的目录名。</p><p>如果使用了 “–force” 选项，在工作副本中未版本控制的障碍路径，不会自动导致签出失败。 如果障碍路径与版本库中的对应路径类型相同(文件或目录),它将成为受版本控制的路径，但是内容不改变。它意味着障碍路径的孩子，如果也是障碍路径，那么也会受版本控制。对于障碍路径中的文件，如果与版本库内的不同，将视为工作副本发生本地修改。版本库中的所有属性都应用于障碍路径。</p><p>2.修改</p><p>SVN对于工作副本的修改包括对于文本的修改与对文件的修改，对文本的修改即指修改文件代码；而后者则包含文件的添加、移动、复制、删除。</p><p>修改文本：可以指定自己喜欢的编辑器，进行代码文本的修改（SVN目前主要用来管理文本文件，二进制文件也可以使用，但是SVN版本比较的核心是二进制代码的比较，如果管理非文本，其效率较慢）。</p><p>修改文件：</p><ul><li>add</li></ul><p>  当新添加一个文件时，使用<code>svn add newfile</code>进行添加，但是请注意，此时新文件并非已真正添加至中央版本库，而是在本地工作副本中被标记为”A”。</p><ul><li>move</li></ul><p>  剪切或者重命名，<code>svn move filename1 filename2</code>，file1name此时被标记为”D”,file2name此时被标记为”A”。</p><ul><li>copy  delete mkdir</li></ul><p>  与前两者类似。</p><p>以上操作对于文件的修改，都是在本地工作副本中先进行标记，如果确定修改完成，运行<code>svn commit</code>即可，则操作在中央版本库中生效。</p><p>3.回滚与还原</p><p>主要分为两种，修改尚未提交，要求还原；修改已提交，要求版本回滚；</p><ul><li>还原</li></ul><p>这里还原到本地最新的版本库。</p><pre><code>svn revert [filename]</code></pre><p>此命令是不用访问网络的（另两个不用访问网络的命令是diff、status），默认将当前修改恢复至签出的工作副本。</p><ul><li>版本回滚</li></ul><p>版本回滚可以理解为将当前修改的副本与历史版本进行合并。主要分为以下几步：</p><ul><li>更新当前版本：<code>svn update</code>；</li><li>查看版本日志：<code>svn log</code>，确认回滚版本号；</li><li>执行回滚：<code>svn merge -r nowverNO:oldverNO</code>；</li><li>提交回滚：<code>svn commit -m &#39;revert version&#39;</code></li><li>回滚后，查看回滚状态：<code>svn status</code>；正常情况下，版本号更新为’nowverNO+1’；</li></ul><p>**注意:**回滚之前一定要更新。</p><p>4.提交</p><p>提交之前最好进行工作副本的更新，以免本地工作副本过时。这里过时的概念是指从上次更新后，中央版本库与本地最新的版本已不一致，即从上次更新后中央版本库已接受其他开发成员的提交。</p><p>正常的文本修改主要指文本内整行的增加或者减少，这些SVN是可以处理的，当作正常的提交。正常的提交比较简单，执行”svn commit “,添加m参数则增加注释，如<code>svn commit -m &#39;new version&#39;</code>。</p><p>非正常的提交主要表现在提交前更新时出现冲突需要合并。冲突指在文本一行内，部分内容发生变化，这点SVN是无法智能识别的，需要依靠开发成员间的协调–解决冲突。</p><p>5.其他</p><p>查看版本状态： <code>svn status</code>；</p><p>查看当前已修改: <code>svn diff</code>；</p><p>查看提交日志： <code>svn log</code>；默认以时间正序排列，在linux下可以<code>svn log|tac</code>以倒序排列；</p><p>##解决冲突</p><p>解决冲突主要发生在文件一行内的部分内容发生变化，一般冲突解决需要比较-合并操作；SVN会采用第三方工具进行以上操作，我选择的是kdiff（本机开发环境是archlinux+kde4+vim），kdiff可以出色完成diff与merge工作。</p><p>更新前通过命令<code>svn status -u</code>查看可能产生的冲突，也可以在提交前使用<code>svn status</code>查看冲突，其中状态标记为C（onflict）,表示冲突。</p><p>首先明确几个版本：本地签出的最新工作副本（LOCAL），本地刚完成修改的版本（MODIFY），中央版本库中的最新版本（HEAD）；冲突主要表现在MODIFY与HEAD之间，</p><p>比如开发组内存在两名开发成员：1和2,时间线如下：</p><ul><li><p>中央版本库中版本5中文件A内容：<code>svn is a tools</code>；</p></li><li><p>成员1本地执行<code>svn update</code>得到版本5 A；<code>svn is a tools</code>；</p></li><li><p>成员2执行<code>svn commit -m &#39;modify tools to tool&#39;</code>；则中央版本库更新为版本6：<code>svn is a tool</code>；</p></li><li><p>成员1修改A为<code>Svn is a tool</code>，</p></li></ul><p>如果1此时执行commit，则SVN会提示版本过期，成员1需执行<code>svn update</code>：此时SVN会存在A存在冲突，此时需要A与B一起进行合并操作。</p><p>合并时，1成员处打开kdiff时关于A有三个版本：</p><ul><li><p>本地签出的最新工作副本（LOCAL 版本5）A：<code>svn is a tools</code>；</p></li><li><p>修改的版本(MODIFY) A： <code>Svn is a tools</code>；</p></li><li><p>中央版本库中的版本6 A（HEAD）： <code>svn is a tool</code>；</p></li></ul><p>此时成员1与2需要进行面对面的交流，进行代码的合并操作。</p><p>（完）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;项目过程中需要规范代码,决定采用svn,(git 主要项目组内其他成员尚不熟悉，且当前已有多个项目在svn服务器中)，我也有机会对此作了一定程度的学习，在这里记下笔记。
    
    </summary>
    
      <category term="Program" scheme="https://www.nankor.org/categories/Program/"/>
    
    
      <category term="svn" scheme="https://www.nankor.org/tags/svn/"/>
    
  </entry>
  
  <entry>
    <title>从aa+bb+cc=abc说起</title>
    <link href="https://www.nankor.org/Alogrithm/12/22/speaking-from-aa-bb-cc-abc.html"/>
    <id>https://www.nankor.org/Alogrithm/12/22/speaking-from-aa-bb-cc-abc.html</id>
    <published>2012-12-21T16:33:13.000Z</published>
    <updated>2017-06-18T15:27:08.529Z</updated>
    
    <content type="html"><![CDATA[<p>有这样一句话“二十岁之后为优秀的人工作，三十岁之后和优秀的人合作，四十岁之后请优秀的人工作~！”；<span id="more"></span>晚上朋友告诉我学校有场求职方面的学长经验交流会，想着趁着二十岁验证下第一句话，就去听了，也是读研以来继续感受坐在下面的感觉。</p><p>首先,参加经验交流的学长学姐们很优秀，我确实看到了金子在发光。</p><p>然后，首先中提到的东西与本文没关系…</p><p>最后，开始我的话题，参加NI面试的学长在接受NI大中华区二号人物面试时，提到面试官抛出这样的问题：</p><p>aa+bb+cc&#x3D;abc;</p><p>a、b、c&#x3D;1~9;</p><p>求a、b、c;</p><p>解下这道题。</p><p>下面是我的求解思路，规律也是有的：</p><p>（1）aa+bb+cc&#x3D;11(a+b+c)&#x3D;100a+10b+c;</p><p>（2）a、b、c&#x3D;1<del>9，则abc范围为11*3</del>11*27&#x3D;&gt;a&#x3D;1<del>2，abc&#x3D;33</del>297中可以被11整除的数字;</p><p>（3）观察一下被11整除的数：11 22 33 44 55…；121 132 143….；220 231 242….；发现木有？百位等于十位与个位之差。</p><p>（4）下面就简单了，解个一元方程就OK!</p><pre><code>n=1~9c=n;b=n+a;则：11*（a+(n+a)+n）=100*a+10*(n+a)+n  =&gt;  n=88a/11;</code></pre><p> a&#x3D;1时，b&#x3D;9,c&#x3D;8;</p><p> a&#x3D;2时，无1<del>9范围内解，即上式答案在a、b、c&#x3D;1</del>9时唯一。</p><p>（5）a&#x3D;1;b&#x3D;9;c&#x3D;8。</p><p>做完了，也许学长当时忘了计算机的思维，直接使用十进制去求解。但是别忘了计算机的思维，甚至是发散下思维，进制！！！！没有告诉是十进制啊？</p><p>那么，对于p进制，解是什么样的，存不存在唯一解？</p><p>我的想法：</p><p>p进制时，这道题被化为这样：</p><p>(p+1)<em>(a+b+c)&#x3D;p^2</em>a+p*b+c; a b c &#x3D;1<del>9，p&#x3D;2</del>10；a b c&lt;&#x3D;p-1；</p><p>这类问题映射为整数规划问题，编程求解。</p><p>下面Lingo程序，用pmin pmax分别表示p的范围,利用abc与def的替换，分别求解pmin、pmax，最后求取pmax-pmin的最大值，获得p范围</p><pre><code>max =pmax-pmin;(pmin+1)*(a+b+c)=pmin^2*a+pmin*b+c;(pmax+1)*(d+e+f)=pmax^2*d+pmax*e+f;!a b c d e f 为正整数;a*b*c*d*e*f&gt;=1;@gin(a);@gin(b);@gin(c);@gin(d);@gin(e);@gin(f);!a b c d e f 为1位p进制数;a&lt;=pmin-1;b&lt;=pmin-1;c&lt;=pmin-1;d&lt;=pmax-1;e&lt;=pmax-1;f&lt;=pmax-1;!pmin pmax为2-10进制;@bnd(2,pmin,10);@bnd(2,pmax,10);pmin&lt;=pmax;@gin(pmin);@gin(pmax);</code></pre><p>得到： <a href="http://nankor.org/uploads/2012/12/lingo.png"><img src="http://nankor.org/uploads/2012/12/lingo.png" alt="lingo"></a> 可知P&#x3D;3~10。 那么每个p进制是否都存在a b c唯一解呢？ 同样很简单的说：已知m进制时，求解方法：</p><pre><code>min =pmin;(pmin+1)*(a+b+c)=pmin^2*a+pmin*b+c;!a b c  为正整数;a*b*c&gt;=1;@gin(a);@gin(b);@gin(c);!a b c 为1位p进制数;a&lt;=pmin-1;b&lt;=pmin-1;c&lt;=pmin-1;!pmin pmax为2-10进制;@bnd(m,pmin,10);@gin(pmin);</code></pre><p>其实，对于p进制，其实当且仅当a&#x3D;1;b&#x3D;p-1;c&#x3D;p-2时，存在恒等式：</p><p>(p<em>a+a)+(p</em>b+b)+(p<em>c+c)&#x3D;p^2</em>a+p<em>b+c&#x3D;2</em>(p^2-1)</p><p>所以，上面问题广义而言是不存在唯一解的，但是规定p进制之后，存在唯一解：</p><p>a&#x3D;1;b&#x3D;p-1;c&#x3D;p-2；</p><p>这道题，本身解决十进制并不难，只要有好的思路，条理清楚很容易想到。但是，很容易忽略进制问题。另外，即使考虑进制问题，求解也是需要一番周折。</p><p>当然从数学推导方面来看，上面a&#x3D;1;b&#x3D;p-1;c&#x3D;p-2，这样的普适公式是可以推导出来的，但是不用编程、纸笔，在面试现场靠心算、数学归纳法证明规律，还要做唯一解验证，确实需要运气与可以鄙视人类的智商。</p><p>跳开本道题。很多时候思维的发散都是很重要的，不仅数学如此！换句话说，只有想到了未知，才理解了已知。（你理解“今天不是世界末日”这个未知命题么？）考察思维发散一直是耍人的伎俩，这点面试时都爱耍。</p><p>本道题的思路经历了 简单-&gt;复杂-&gt;简单 的历程，此题如此，事物的发展变化又岂不是如此！本文也到了简单那一步……</p><p>Over</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有这样一句话“二十岁之后为优秀的人工作，三十岁之后和优秀的人合作，四十岁之后请优秀的人工作~！”；
    
    </summary>
    
      <category term="Alogrithm" scheme="https://www.nankor.org/categories/Alogrithm/"/>
    
    
      <category term="lingo" scheme="https://www.nankor.org/tags/lingo/"/>
    
      <category term="思维发散" scheme="https://www.nankor.org/tags/%E6%80%9D%E7%BB%B4%E5%8F%91%E6%95%A3/"/>
    
      <category term="数学" scheme="https://www.nankor.org/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>最近南柯在忙啥</title>
    <link href="https://www.nankor.org/Web/08/27/recently-mangsha.html"/>
    <id>https://www.nankor.org/Web/08/27/recently-mangsha.html</id>
    <published>2012-08-27T15:26:38.000Z</published>
    <updated>2017-06-18T15:27:08.529Z</updated>
    
    <content type="html"><![CDATA[<p>很久没更新博客，一方面前段时间在忙项目，另一方面有两篇博文的草稿压着没发。本篇谈下回学校后在忙啥：主要是关于网络代理的，另外扯淡下和“病魔”作斗争的事。<span id="more"></span></p><p>“西北一所不知名的高校”（以下用DX代替之）的校园网使我萌生了对代理技术的钻研冲动，使我忍着肺炎的折磨折腾完了IPV6的代理、Goagent与APJP的学习。DX的校园网每月提供给每个最低等级的DXer是3 GB（吉比特） IPv4流量，无限制的IPv6流量，对于我这种暑假留校的临时DXer，这个待遇不减，挺好！在此对DX校园网表示“我能说脏话吗？”式的特别感谢。</p><p>暑假当我从家回到DX临时宿舍里，准备享用3G大餐时，突然发现上不去外网：这是3G大餐被别人吃了的象征。这得插句话，我的校园网账号有密码的，但不知道被哪个良知被泯的DXer把账号盗用了，偷吃了我的3G大餐……好吧，“世态炎凉”这话我可没说。</p><p>刚来学校，得知会一下在DX的朋友。无3G大餐的第一招横空闪耀夺目开天辟地分开混沌（原谅小学没有记住那么多成语）似的诞生了：</p><h2 id="1-无流量和同在DX局域网内的妹纸聊天"><a href="#1-无流量和同在DX局域网内的妹纸聊天" class="headerlink" title="1.      无流量和同在DX局域网内的妹纸聊天"></a>1.      无流量和同在DX局域网内的妹纸聊天</h2><p>我的想法很单纯，就是和那人说下“我来学校了”；再单纯点，就是给她秀下Sha X的Windows同网聊天“技术”。角落的你说啥？用手机发短信？….手机神马的我觉得不单纯……</p><p>IPV6网络没断，好；</p><p>Google支持IPV6，好；</p><p>有飞鸽传书、飞秋这类局域网聊天软件，好；</p><p>万事俱备，只差那个月黑风高夜的行动了！</p><p>首先妹纸没有飞秋，用走IPV6的Gmail把飞秋发给她；然后她把IP用邮件回给我，好了。飞秋互加好友，开始聊天。她嫌飞秋消息来了麻雀叫不好听，非换成QQ的“滴滴”，没事！随便换….</p><p>这个算简单的，但也有点复杂。我说，你要是linuxer，咱直接在&#x2F;proc的ps下聊天，她说不懂，唉，秀到她知识的短处了，那就秀可而止吧！</p><p>第一招也就是在DX的网内活动，DX校园网又不是大中华局域网，没啥可看的，我不羁的心又萌生了对真实互联网的渴望（很多网民都有这诉求）。穷则思变，变则通，我在饥肠辘辘的19号晚上、在舍友喷香喷香的鼾声中完成了这次变。</p><h2 id="使用IPV6上真实的互联网"><a href="#使用IPV6上真实的互联网" class="headerlink" title="使用IPV6上真实的互联网"></a>使用IPV6上真实的互联网</h2><p>这次跟妹纸没关系。</p><p>完全是怒于看不到真实的互联网了。</p><p>首先你得有改hosts的经历（没有，就没必要向下看本文了），用思维导图阐述下（形容词和第一招的形容词一样多，原谅我小学没学那么多成语吧）第二招。</p><p><a href="http://nankor.org/uploads/2012/08/%E5%8E%BB%E5%A4%96%E7%BD%91%E5%85%9C%E5%9C%88.jpg"><img src="http://nankor.org/uploads/2012/08/%E5%8E%BB%E5%A4%96%E7%BD%91%E5%85%9C%E5%9C%88.jpg"></a></p><h2 id="2-不改hosts，上部分IPV6的网站"><a href="#2-不改hosts，上部分IPV6的网站" class="headerlink" title="2.      不改hosts，上部分IPV6的网站"></a>2.      不改hosts，上部分IPV6的网站</h2><p>这个只能上部分网站，有兴趣的可以参考，内涵的给了一份IPV6的<a href="http://is.gd/AeVm0n">hosts</a>。</p><h2 id="3-Goagent使用IPV6-GAE"><a href="#3-Goagent使用IPV6-GAE" class="headerlink" title="3.      Goagent使用IPV6 GAE"></a>3.      Goagent使用IPV6 GAE</h2><h3 id="3-1-GAE"><a href="#3-1-GAE" class="headerlink" title="3.1 GAE"></a>3.1 GAE</h3><p>GAE主页地址：<a href="http://appengine.google.com/">http://appengine.google.com/</a></p><p>详细参考：<a href="https://developers.google.com/appengine/docs/">https://developers.google.com/appengine/docs/</a>****</p><p>GAE 英文全称为 Google App Engine。Google管理的数据中心中用于WEB应用程序的开发和托管的平台。2008年4月发布第一个测试版本。目前支持python、java与go语言开发。全球已有数十万的开发者在其上开发了众多的应用。GAE也是Google云计算的一部分，是一个互联网应用服务引擎，开发人员可以使用GAE的API开发互联网应用，而带宽、主机全都不用担心，Google都提供给你了。数据库是google专有的数据库，数据库和空间可以免费使用1G，每月500万次PV，对于一般的应用应该足够了。</p><h3 id="3-2-Goagent项目"><a href="#3-2-Goagent项目" class="headerlink" title="3.2 Goagent项目"></a>3.2 Goagent项目</h3><p>（希望你能用上1的办法）</p><p>Goagent是使用Python编写的网络软件，可以运行在Windows&#x2F;Mac&#x2F;Linux&#x2F;Android&#x2F;iTouch&#x2F;iPhone&#x2F;iPad&#x2F;webOS&#x2F;OpenWRT&#x2F;Maemo上。</p><p>PC Goagent项目主页：<a href="https://code.google.com/p/goagent/">https://code.google.com/p/goagent/</a></p><p><a href="https://github.com/goagent/goagent">https://github.com/goagent/goagent</a></p><p>Android上Goagent项目主页：<a href="https://code.google.com/p/gaeproxy/">https://code.google.com/p/gaeproxy/</a></p><p>Goagent共有三种部署方式，其中一种部署方式即为部署在GAE上，另外两种为部署在php空间、python方式（PAAS）。最新版的Goagent  GAE的fetch是用go语言（猜测）开发的，稍旧的版本使用python开发。</p><p>Goagent原理图：</p><p><a href="http://nankor.org/uploads/2012/08/%E4%BB%A3%E7%90%86%E7%A4%BA%E6%84%8F%E5%9B%BE2.png"><img src="http://nankor.org/uploads/2012/08/%E4%BB%A3%E7%90%86%E7%A4%BA%E6%84%8F%E5%9B%BE2.png"></a></p><p>先叙述下原理：</p><p>1、浏览器发出正常的http请求（包含IPV4的也有IPV6的），由于没有IPV4的流量，这个自然不能走正常的网络</p><p>2、请求主机（本地）Goagent客户端封装正常http请求数据，我想的办法就在这步。稍后细说。</p><p>3、运行于GAE的中转调用UlrFetchService提取数据，并访问目标网站。</p><p>4、运行于GAE的中转对请求后的数据进行封装，返回请求主机</p><p>5、请求主机（本地）Goagent客户端解包，提取数据，回复浏览器请求</p><p>我想的办法是在第1、2步动动手脚。</p><p>需要将正常的IPv4 http请求由Goagent通过IPV6的GAE封装，然后返回回复数据，浏览器解析。</p><p>需要关心三步：</p><p>1、需要能够访问IPV6的GAE，这要求hosts修改为IPv6的google hosts，1中的hosts用上了。</p><p>2、需要有可使用的GAE Appid：这个简单，搭建GAE使用goagent不是本文叙述的目的（可参考此<a href="http://ishare.cn.ms/archives/181">http://ishare.cn.ms/archives/181</a> ）</p><p>3、确保Goagent走的是IPV6的google。对于上面的1、2步已经解决了，第3步是关键。</p><p>看下Goagent中local目录下proxy.ini的配置文件各字段含义：</p><p><a href="http://nankor.org/uploads/2012/08/proxyini1.jpg"><img src="http://nankor.org/uploads/2012/08/proxyini1.jpg"></a></p><p><a href="http://nankor.org/uploads/2012/08/proxyini2.jpg"><img src="http://nankor.org/uploads/2012/08/proxyini2.jpg"></a></p><p><a href="http://nankor.org/uploads/2012/08/proxyini3.jpg"><img src="http://nankor.org/uploads/2012/08/proxyini3.jpg"></a></p><p>第3步的解决办法：</p><p>[1] 因为IPV4访问已挂，只能靠IPv6的Google了，使主机可以访问IPv6 google。</p><p>修改Windows的hosts：</p><p>Win+R      notepad drivers\etc\hosts           粘贴1中的hosts。</p><p>修改linux下的hosts:</p><p>su –c “ vim &#x2F;etc&#x2F;hosts”   粘贴1中的hosts。</p><p>或者直接hg clone XXX（你懂得）</p><p>[2] 修改proxy.ini的gae数据段的profile，将其修改为</p><p>profile &#x3D; google_ipv6</p><p>好了，现在走IPv6 GAE的Goagent搭建好了，浏览器怎么访问呢？</p><p>方法还在这里：<a href="http://ishare.cn.ms/archives/181">http://ishare.cn.ms/archives/181</a>（设为全局代理就行了）</p><h2 id="4-Goagent使用IPV6的php空间"><a href="#4-Goagent使用IPV6的php空间" class="headerlink" title="4.      Goagent使用IPV6的php空间"></a>4.      Goagent使用IPV6的php空间</h2><p>这个原理与Goagent使用GAE搭建代理类似：只不过将数据抓取的中转端放在了php空间中，用了curl函数去抓取目标服务器数据。</p><p>1、 首先得有个php空间，支持IPv4就行（废话）</p><p>2、 使用cloudflaer CDN加速ipv4 php空间，开启空间的IPV6访问</p><p>3、 搭建Goagent的php代理</p><h3 id="4-1-获取IPv4-php空间与域名申请"><a href="#4-1-获取IPv4-php空间与域名申请" class="headerlink" title="4.1 获取IPv4 php空间与域名申请"></a>4.1 获取IPv4 php空间与域名申请</h3><p>关于php主机空间选择这点，穷人遵循免费的原则（虽然俺有个付费的主机空间，可不是用来折腾这个的）。我选择1freehosting的免费主机空间与tk免费域名。先说下1freehosting的免费主机空间（<a href="http://1freehosting.com/">http://1freehosting.com</a>）,这个空间的详细信息（探针发回的信息）：</p><p><a href="http://nankor.org/uploads/2012/08/2012-8-26-%E5%91%A8%E6%97%A5-23-22-57.png"><img src="http://nankor.org/uploads/2012/08/2012-8-26-%E5%91%A8%E6%97%A5-23-22-57.png"></a></p><p>Goagent的php代理方式对于php空间是有要求的：</p><p>1、 支持curl模块或者allow_url_fopen打开</p><p>2、 支持zlib压缩模块</p><p>3、 php空间不能有广告</p><p>从上面的探针返回的信息看到前两条1freehosting的主机空间是符合要求的，对于第3条的支持情况稍后谈到。Goagent从1.8.4版本以后逐渐去掉了探针php。</p><p>主机空间鼓捣好了，tk的域名申请也很简单，去tk主页<a href="http://www.dot.tk/zh/index.html">http://www.dot.tk/zh/index.html</a>注册，申请一个免费的域名,绑定到1freehosting空间就行了，这样IPV4的php空间搞定了。</p><p>如果上面不明白参考此：<a href="http://ishare.cn.ms/archives/703">http://ishare.cn.ms/archives/703</a></p><h3 id="4-2-获取IPv6-php空间"><a href="#4-2-获取IPv6-php空间" class="headerlink" title="4.2 获取IPv6 php空间"></a>4.2 获取IPv6 php空间</h3><p>需要将IPV4的php空间分配一个IPV6的地址,这个就要靠CDN了，采用的是cloudflare CDN（希望大家不要过多使用这样优秀的免费资源，为了国内一大批博客的生存，希望大家节省使用）。</p><p>先介绍下cloudflare CDN加速服务：cloudflare免费DNS的CDN节点主要分布于荷兰、美国、香港、法国、日本等国家和地区，但是cloudflare在亚太地区的CDN节点却大大可以加速你在美国或者欧洲的主机访问速度。CloudFlare已经将路由调整到了香港或者日本，并且不断增加在亚洲增加服务器分布，来优化调整针对亚洲客户的访问。</p><p>使用cloudflare CDN加速主机空间的访问与开通主机空间的IPV6访问，主要有这几步：</p><p>1、 首先<a href="https://www.cloudflare.com/sign-up">注册cloudflare CDN</a>；</p><p>2、 接着填写自己要加速的域名（例子是korlj.tk）：如下图</p><p>   <a href="http://nankor.org/uploads/2012/08/cloudflarecdn11.jpg"><img src="http://nankor.org/uploads/2012/08/cloudflarecdn11.jpg"></a></p><p>接下来Cloudflare CDN会检查你的域名是否有效（大概1 min），如果有效，contitue setup。</p><p>3、  接下来cloudflare会列出域名真正的A记录 MX记录 CNAME记录，这个是核实的，不用管，“I’ve added all missing records,continue”；</p><p>4、 选择是否采用免费的，这个自愿吧，你想散点财，我没意见。免费的就够用了。Continue</p><p><a href="http://nankor.org/uploads/2012/08/cloudflarecdn2.jpg"><img src="http://nankor.org/uploads/2012/08/cloudflarecdn2.jpg"></a></p><p>5、  好了，最后一步，cloudflare CDN为你的域名做了最优的DNS服务器的选择：</p><p> <a href="http://nankor.org/uploads/2012/08/cloudflare3.jpg"><img src="http://nankor.org/uploads/2012/08/cloudflare3.jpg"></a></p><p><a href="http://korlj.tk/">http://korlj.tk</a> 原来默认使用TK提供的DNS解析服务：ns01&#x2F;2.dot.tk那两个，使用cloudflare CDN后使用lady&#x2F;seth.ns.cloudflare.com</p><p>6、 继续设置空间的IPv6的访问，点击 <a href="http://nankor.org/uploads/2012/08/cloudflare4.jpg"><img src="http://nankor.org/uploads/2012/08/cloudflare4.jpg"></a>上步</p><p>会看到这样：</p><p><a href="http://nankor.org/uploads/2012/08/cloudflare5.jpg"><img src="http://nankor.org/uploads/2012/08/cloudflare5.jpg"></a></p><p>发现korlj.tk的域名还没有被加入 free plan，这是因为还没有在域名提供商那里修改为cloudflare CDN的NS所致，没关系，先设置IPv6的访问，稍后去TK那里设置。点击第一行右侧的齿轮（设置），选择第二项：</p><p><a href="http://nankor.org/uploads/2012/08/cloudflare6.jpg"><img src="http://nankor.org/uploads/2012/08/cloudflare6.jpg"></a></p><p>7、 会看到如下图：</p><p><a href="http://nankor.org/uploads/2012/08/7.png"><img src="http://nankor.org/uploads/2012/08/7.png"></a></p><p>将Automatic IPv6右off选择为full即可。如果选为safe，需要在域名为ipv6.korlj.tk才使用IPv6访问空间。Cloudflare CDN这边就设置完了，接下来将cloudflare分配的两个优化后的NS添加到我的域名</p><p>8、 添加cloudflare CDN第三方DNS解析服务到我的域名下</p><p><a href="http://nankor.org/uploads/2012/08/8.png"><img src="http://nankor.org/uploads/2012/08/8.png"></a></p><p>Save Changes,OK</p><p>9、大概10多分钟就可以了，可以试着ping下刚才的域名（我ping之前我已经添加至Cloudflare CDN下的一个域名）：</p><p><a href="http://nankor.org/uploads/2012/08/9.jpg"><img src="http://nankor.org/uploads/2012/08/9.jpg"></a></p><p>可看到已经是IPv6了，原来的IPv4是这样的：</p><p><a href="http://nankor.org/uploads/2012/08/10.png"><img src="http://nankor.org/uploads/2012/08/10.png"></a></p><p>以上的IP地址都是cloudflare CDN提供的，下面这个更清晰：</p><p><a href="http://nankor.org/uploads/2012/08/11.png"><img src="http://nankor.org/uploads/2012/08/11.png"></a></p><p>这样有个缺点就是如果你的主机空间原来是独立IP的，这样独立IP的优势就失去了（这也是不拿我的付费空间做试验的原因）</p><p>现在已经有了IPv6的php空间，这样的空间你在没有DX校园网流量的情况下也是可以访问的。</p><h3 id="4-3-Goagent-使用IPv6-php空间"><a href="#4-3-Goagent-使用IPv6-php空间" class="headerlink" title="4.3 Goagent 使用IPv6 php空间"></a>4.3 Goagent 使用IPv6 php空间</h3><p>首先使用FTP工具（Filezilla lftp都行）上传goagent&#x2F;sever&#x2F;php目录下的index.php至主机空间目录，这个一般是public-html之类的（如果与主机空间提供的冲突，可以改名：比如goagent.php），也可以上传到自己建立的目录，只要在配置文件中写到index.php(你修改后的名字)所在路径即可，比如XXX.tk&#x2F;mygoagent&#x2F;goagent.php，这样也能解除广告的困扰，解决了上面的第3条的限制。上传之后，试着访问那个页面，成功时默认跳转到google主页。</p><p>下面配置Goagent本地的客户端使之采用php空间提供代理，修改proxy.ini的配置文件，如下修改：</p><p><a href="http://nankor.org/uploads/2012/08/12.png"><img src="http://nankor.org/uploads/2012/08/12.png"></a></p><p>图中的index.php即为刚上传的那个php。</p><p>好了，现在打开goagent，会看到已经启用fetchsever，设置浏览器的全局代理为127.0.0.1:8080就可以了。</p><p>经过我的实验，访问一些网站还是比较快的，真实的互联网就在你的面前！</p><p>这种方法速度上优于上种方法。</p><h2 id="5-APJP使用IPv6-php空间"><a href="#5-APJP使用IPv6-php空间" class="headerlink" title="5.      APJP使用IPv6 php空间"></a>5.      APJP使用IPv6 php空间</h2><h3 id="5-1-APJP项目"><a href="#5-1-APJP项目" class="headerlink" title="5.1 APJP项目"></a>5.1 APJP项目</h3><p>Google code：<a href="https://code.google.com/p/apjp/">https://code.google.com/p/apjp/</a></p><p>Github：<a href="https://github.com/jvansteirteghem/apjp">https://github.com/jvansteirteghem/apjp</a></p><p>Google code Wiki: <a href="https://code.google.com/p/apjp/wiki/AboutAPJP">https://code.google.com/p/apjp/wiki/AboutAPJP</a></p><p>APJP提供的使用平台还是比较广泛的，原理与Goagent类似。有些时候，访问一些网站需要使用代理，而APJP是一项开源代理项目，是非常适合个人使用自建代理工具。APJP分为两个部分，LOCAL(客户端)和REMOTE(服务器端)，其中LOCAL部分由Java语言编写，REMOTE则分别用PHP, Java, Python, Ruby等语言编写以适应不同的平台，LOCAL部分是一个本地代理，通过和远端服务器部分连接，以RC4 128bit 加密通讯，达到一个比较完整的代理方案。</p><h3 id="5-2-IPV6-php空间的获取"><a href="#5-2-IPV6-php空间的获取" class="headerlink" title="5.2 IPV6 php空间的获取"></a>5.2 IPV6 php空间的获取</h3><p>与上面Goagent获取IPv6php空间的方式一致，略去。</p><h3 id="5-3-使用APJP建立IPv6-php空间代理"><a href="#5-3-使用APJP建立IPv6-php空间代理" class="headerlink" title="5.3 使用APJP建立IPv6 php空间代理"></a>5.3 使用APJP建立IPv6 php空间代理</h3><p>主要提供的平台与安装办法google code wiki写的已经比较详细了：</p><p><a href="http://nankor.org/uploads/2012/08/13.png"><img src="http://nankor.org/uploads/2012/08/13.png"></a></p><p>这里强调下，最新APJP安装注意事项，</p><p>1、 只要在APJP_REMOTE_PHP目录中的index.php填写key就可以了，上传整个APJP_REMOTE_PHP目录下的所有文件</p><p>2、 目前APJP支持添加10台主机，填写APJP_LOCAL&#x2F;APJP.properties时，</p><p>APJP_REMOTE_HTTP_SERVER_1_REQUEST_URL时，填写到HTTP目录即可，比如APJP_REMOTE_PHP目录下文件上传在&#x2F;public-html&#x2F;myapjp路径下，则填写</p><p>APJP_REMOTE_HTTP_SERVER_1_REQUEST_URL &#x3D; xxx.tk&#x2F;myapjp&#x2F;APJP&#x2F;HTTP</p><p>就可以了，HTTPS与之类似。</p><p>3、 如果是在Linux下运行APJP_LOCAL.sh，请将脚本修改如下：</p><pre><code>#!/bin/shjava -classpath APJP_LOCAL_JAVA-1.0.0.jar APJP/Main</code></pre><p>并且我迫切希望你重新保存或者建立脚本写入以上内容，以保存成*inx文本行结尾符，因为原作者脚本的行结尾符是DOS下的…-_-||,这点我已经在github fork这个项目并修改了此。</p><p>APJP项目相对Goagent使用php空间作为代理，安全性会提高很多。</p><h2 id="6-自己搭建简单的IPV6-代理网站"><a href="#6-自己搭建简单的IPV6-代理网站" class="headerlink" title="6.      自己搭建简单的IPV6 代理网站"></a>6.      自己搭建简单的IPV6 代理网站</h2><h3 id="6-1-申请IPv6-主机空间"><a href="#6-1-申请IPv6-主机空间" class="headerlink" title="6.1 申请IPv6 主机空间"></a>6.1 申请IPv6 主机空间</h3><p>关于IPv6主机空间的申请以上已经说过，略去</p><h3 id="6-2-使用knproxy"><a href="#6-2-使用knproxy" class="headerlink" title="6.2 使用knproxy"></a>6.2 使用knproxy</h3><p>knproxy：<a href="http://sourceforge.net/projects/knproxy/">http://sourceforge.net/projects/knproxy/</a></p><p>完整方案：<a href="http://sourceforge.net/projects/level5/">http://sourceforge.net/projects/level5/</a></p><p>1、 Knproxy简介</p><p>KnProxy是一系列基于PHP和cURL模块的网页版代理系统。它的主要目标就是：</p><p>1）方便架设：只需上传即可使用</p><p>2）要求低：免费空间就能用，无成本架设</p><p>3）扩展性好：有问题更新很方便，整合到自己的项目里也很方便</p><p>2、 使用方法</p><p>上传knproxy至你的目录即可，打开浏览器至knproxy目录下就可以了，马上会看到效果。</p><p>由于空间使用IPv6 所以没有校园网流量时，这种方法访问外网是最简单的，也是最有效的。</p><h2 id="7-IPv6代理软件-IPv6代理网站"><a href="#7-IPv6代理软件-IPv6代理网站" class="headerlink" title="7.      IPv6代理软件 IPv6代理网站"></a>7.      IPv6代理软件 IPv6代理网站</h2><p>这一类比较多，各位自行Google，IPv6代理网站推荐以下几个：</p><p>StudioProxy代理：<a href="http://ipv6.studioproxy.com/">http://ipv6.studioproxy.com</a></p><p>yegle’s glype代理  <a href="http://yegle.net/glype/index.php">http://yegle.net/glype/index.php</a></p><p>sixxs.org代理： <a href="http://www.sixxs.net/tools/gateway/">http://www.sixxs.net/tools/gateway/</a>   sixxs.org同时提供ipv6 to ipv4和ipv4 to ipv6，也可以直接在网址后面加上 .sixxs.org来使用IPV6浏览目标网站。</p><h2 id="8-关于“代理”后记"><a href="#8-关于“代理”后记" class="headerlink" title="8.      关于“代理”后记"></a>8.      关于“代理”后记</h2><p>有人会询问如何使用IPv6代理上QQ之类的，这种软件存在，不过博主尊重该软件原作者的意愿，不在此说了。以上Goagent是无法提供QQ代理的，我已测试，其他几个像APJP我没有测试。</p><p>本来没有心思做这个的，可是被DX校园网搞的没流量了。。。再次向DX XXX处表示“我能说脏话吗？”式的感谢！</p><h2 id="9-Nan-Kor与病魔作斗争的故事"><a href="#9-Nan-Kor与病魔作斗争的故事" class="headerlink" title="9.      Nan Kor与病魔作斗争的故事"></a>9.      Nan Kor与病魔作斗争的故事</h2><p>说来惭愧，这里写的内容都是博主顶着肺炎的折磨做完的。</p><p>治肺炎，DX的校医院黑的我就不说了，浪费博主200大洋，给博主输了三天液，病还没有好，更别说护士扎针把我的左手两处都扎肿了…这也不能完全怪护士，我左手背面能看到的也就6、7条静脉血管……(我想大家都一样…)偏偏输液时我右手又要拿着Kindle Touch看书，只能三天的三针都让扎左手了（这点表示下对lxj关心的感谢）。</p><p>我当时看的书是高铭的《天才在左 疯子在右》，有空写下书评，觉得书的内容实在太符合我这伪精神病了……(感谢下wmd对我能够看完该书的影响)</p><p>现在揉着我的左手还是肿的… 尼玛！！！</p><p>最后感谢师兄chch，师姐lby，感谢同学wgf，是他们提供了拥有IPV6的校园网让我试验，我所在实验室网络没有IPv6环境，囧！！！</p><p>Nan Kor</p><p>Aug 27</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;很久没更新博客，一方面前段时间在忙项目，另一方面有两篇博文的草稿压着没发。本篇谈下回学校后在忙啥：主要是关于网络代理的，另外扯淡下和“病魔”作斗争的事。
    
    </summary>
    
      <category term="Web" scheme="https://www.nankor.org/categories/Web/"/>
    
    
      <category term="APJP" scheme="https://www.nankor.org/tags/APJP/"/>
    
      <category term="Goagent" scheme="https://www.nankor.org/tags/Goagent/"/>
    
      <category term="IPV6" scheme="https://www.nankor.org/tags/IPV6/"/>
    
      <category term="Knproxy" scheme="https://www.nankor.org/tags/Knproxy/"/>
    
  </entry>
  
  <entry>
    <title>我为什么要去旅行</title>
    <link href="https://www.nankor.org/Walk/06/11/why-travel.html"/>
    <id>https://www.nankor.org/Walk/06/11/why-travel.html</id>
    <published>2012-06-10T17:54:51.000Z</published>
    <updated>2017-06-18T15:27:08.529Z</updated>
    
    <content type="html"><![CDATA[<p>公元2012年5月31日晚，伴随K165次列车出站一声长长鸣笛，我和flyer夜中离开西安前往成都。<span id="more"></span></p><p>去成都旅行的决定我俩做的都很干脆：flyer说他是中午起床（原谅IT人的习惯吧）吃完饭后突发奇想决定去成都转一趟。下午1点在实验室的我看到他的QQ头像闪了，与flyer几句交谈后，在QQ上答应了，接下来搞定双程火车票。</p><p>当时是5月31号，我的本科毕设验收是在6月6号，答辩在7号。决定旅行三天，火车6月1日下午到成都，6月4日晚离开成都返回西安。</p><p>仗着还年轻，仗着毕设前期工作终了，没有告知更多的人，没有多余的思考，也没有多余的准备，我依然赴身前往。</p><p>这是自由压抑久了，一次短暂的释放？</p><p>这是行动派的一次集中体现？</p><p>带着相机与衣服，拿了Kindle与Mp3就走了……</p><p>我为什么要去旅行？</p><p>回到5月31日中午的实验室，是学习生活的逃避？毕业旅行的跟风？为了扔掉几斤赘肉？响应“读万卷书，行万里路”？释放心灵的压力？</p><p>得了吧，全是借口！</p><p>抛弃除相机外的其他电子设备，作为自然个体去融合自然</p><p>不要拿起kindle去看书，不要按下手机翻twitter，不要用“粗糙”的信息去玷污追求的清朗夏天与定格的美丽瞬间，自然远比人类要纯粹，要干净？</p><p>把心放在另一个地方，找回脑海最想要的场景，去旅行</p><p>成都是座慢城市，除了静谧，没有更好的词去形容她。</p><p>一头乌龟飘荡在无际的海洋，不去思考哪里有彼岸，伫立在乌龟之上，人心，动乎？静乎？</p><p>作为人在成都的想象，尽力挖掘最纯粹的审美观去动心，去静心，去旅行</p><p>夏天的蜀都每个下午两点，总有一场细雨洗净天空</p><p>与其说是沐浴城市，催流锦江，不如说是净化心扉，洗涤生命</p><p>三场雨，三颗心，生命走廊多了几幅壁画，修缮了走过的飞檐，为什么不去旅行？</p><p>对纯粹无世间的自然与崇高非人类的生命的向往，就去旅行了。</p><p><a href="http://nankor.org/uploads/2012/06/DSCF0280.jpg"><img src="http://nankor.org/uploads/2012/06/DSCF0280.jpg"></a></p><p>茶凉了，喝茶。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;公元2012年5月31日晚，伴随K165次列车出站一声长长鸣笛，我和flyer夜中离开西安前往成都。
    
    </summary>
    
      <category term="Walk" scheme="https://www.nankor.org/categories/Walk/"/>
    
    
      <category term="成都" scheme="https://www.nankor.org/tags/%E6%88%90%E9%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>蓝莲花——写在《英雄主义》之后</title>
    <link href="https://www.nankor.org/Think/05/29/blue-lotus-written-after-the-heroism.html"/>
    <id>https://www.nankor.org/Think/05/29/blue-lotus-written-after-the-heroism.html</id>
    <published>2012-05-29T03:05:30.000Z</published>
    <updated>2017-06-18T15:27:08.529Z</updated>
    
    <content type="html"><![CDATA[<p><span style="font-family: 'comic sans ms', sans-serif; font-size: large;">       5月20日晚上七点，在新校区给2011级同学做了一场<a href="http://xgc.xidian.edu.cn/view.asp?newsid=1758">报告</a>，自己想对他们说的都说了，但是缺点对自己说的东西。</span><span style="font-family: 'comic sans ms', sans-serif;"><span id="more"></span></span></p><p><span style="font-size: large; font-family: 'comic sans ms', sans-serif;">          没有开始报告前，和Y与F坐在11级导员面前，导员提到“现在的学生，100多号人去上大物课，可能只有不到40人在听课”、“许多人大一下了在迷茫该干什么”、“有些家长就接受不了：孩子考上大学了，突然连20分都考不到了”。</span></p><p><span style="font-size: large; font-family: 'comic sans ms', sans-serif;">          听到上面的话，只能说导员见怪不怪了。</span></p><p><span style="font-size: large; font-family: 'comic sans ms', sans-serif;">          大学是天堂，也是地狱。         </span></p><p><span style="font-size: large; font-family: 'comic sans ms', sans-serif;">          我在报告的开头提道：“个人价值依赖于社会价值，体现在社会价值，所以今天讲的“英雄主义”不是“个人英雄主义”，也不是“革命英雄主义”！</span></p><p><span style="font-size: large; font-family: 'comic sans ms', sans-serif;">          在报告中反复强调“英雄主义”是种责任，尤其是当我提到“现在大家是学生，需要为学业负责，长大了，将来要负责的人或事情就多了”，下面的同学都笑了。是的，责任就是价值的最佳体现。</span></p><p><span style="font-size: large; font-family: 'comic sans ms', sans-serif;">          自出生之日起，我们都希望在世间走得无拘无束，醉心于自己喜欢的事情，这就是自由。如果你找到了让你感觉自由的事情，请珍惜它；如果这件事情符合世界的普遍规律，请珍惜它；如果你能拿出英雄主义的心思做这件事情，请珍惜它！</span></p><p><span style="font-size: large; font-family: 'comic sans ms', sans-serif;">          自由是个奢侈的词。</span></p><p><span style="font-size: large; font-family: 'comic sans ms', sans-serif;">          希望在个人生涯理想无变、追求依然，英雄主义广播远扬。</span></p><embed src=http://image.xcar.com.cn/dv_upload/lanlianhua.mp3 autostart=true loop=true >]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;span style=&quot;font-family: &#39;comic sans ms&#39;, sans-serif; font-size: large;&quot;&gt;       5月20日晚上七点，在新校区给2011级同学做了一场&lt;a href=&quot;http://xgc.xidian.edu.cn/view.asp?newsid=1758&quot;&gt;报告&lt;/a&gt;，自己想对他们说的都说了，但是缺点对自己说的东西。&lt;/span&gt;&lt;span style=&quot;font-family: &#39;comic sans ms&#39;, sans-serif;&quot;&gt;
    
    </summary>
    
      <category term="Think" scheme="https://www.nankor.org/categories/Think/"/>
    
    
      <category term="自由" scheme="https://www.nankor.org/tags/%E8%87%AA%E7%94%B1/"/>
    
      <category term="英雄主义" scheme="https://www.nankor.org/tags/%E8%8B%B1%E9%9B%84%E4%B8%BB%E4%B9%89/"/>
    
  </entry>
  
  <entry>
    <title>一句Shell</title>
    <link href="https://www.nankor.org/Linux/04/23/a-shell.html"/>
    <id>https://www.nankor.org/Linux/04/23/a-shell.html</id>
    <published>2012-04-23T06:14:55.000Z</published>
    <updated>2017-06-18T15:27:08.529Z</updated>
    
    <content type="html"><![CDATA[<p>这篇博文主要记录下那些比较妙的shell语句，一般为一句解决问题（慢慢积累）<span id="more"></span></p><ul><li>匹配当前目录下同时含有字符串str1与字符串str2的文件，并打印文件名</li></ul><pre><code>grep &#39;srt1&#39; -R *|egrep -v &#39;cscope|tags&#39;|cut -d : -f 1|xargs grep &#39;MAIN&#39; -R|cut -d : -f 1|uniq</code></pre><ul><li><p>ls的结果拷贝至新目录(限制要使用xargs)</p><p>ls &#x2F;etc&#x2F;a* |xargs cp -a -t .</p></li><li><p>获取目录以及该目录下所有文件的属性 ，保存至save.facl</p><p>getfacl . -R</p><p>getfacl . -R &gt; save.facl </p></li><li><p>恢复某目录下及该目录下所有文件属性</p><p>setfacl  –restore&#x3D;save.facl . -R </p></li><li></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇博文主要记录下那些比较妙的shell语句，一般为一句解决问题（慢慢积累）
    
    </summary>
    
      <category term="Linux" scheme="https://www.nankor.org/categories/Linux/"/>
    
    
      <category term="grep" scheme="https://www.nankor.org/tags/grep/"/>
    
      <category term="shell" scheme="https://www.nankor.org/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>关于google搜索重定向</title>
    <link href="https://www.nankor.org/Web/04/21/google-search-redirects.html"/>
    <id>https://www.nankor.org/Web/04/21/google-search-redirects.html</id>
    <published>2012-04-21T15:50:23.000Z</published>
    <updated>2017-06-18T15:27:08.529Z</updated>
    
    <content type="html"><![CDATA[<p>关于国内google的重定向问题，想必使用google的用户都烦透了，当使用google搜索功能，点击搜索结果经常会出现对搜索结果重定向，有时候甚至打不开google的搜索结果。<span id="more"></span></p><p><strong>什么是google的重定向？</strong></p><p>Google通常将美国之外的国家&#x2F;地区的用户从 google.com重定向到面向特定国家&#x2F;地区的网站的过程叫做google的重定向（例如，针对英国的 Google 网站是 <a href="http://www.google.co.uk,针对我国的全部转为google.com.hk),这样可以使用户轻松使用面向特定国家/%E5%9C%B0%E5%8C%BA%E7%9A%84google%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD%E3%80%82">www.google.co.uk，针对我国的全部转为google.com.hk），这样可以使用户轻松使用面向特定国家/地区的google搜索功能。</a></p><p><strong>google怎么做到重定向的？</strong></p><p>google使用用户计算机的IP地址来确定用户位置以及相应的 Google 域，这一IP地址通常是用户计算机互联网服务提供商 (ISP) 的互联网地址。</p><p><strong>旁白</strong>：Google为了统计搜索结果，在链接点击之后不会真的进入连接地址，而是跑一趟Google的重新定位服务（理由有二：1、记录浏览，提供Site-Analytics 2、广告啊！！Google可不是公益组织）</p><p><strong>如何防止google的重定向？</strong></p><ol><li><p>如果用户希望访问 Google.com 而不进行重定向，可以单击 Google 主页右下方的”Google.com”链接。如果用户启用了 Cookie，之后每次进行访问时，用户的浏览器都会直接连接到 Google.com。如果禁用 Cookie，则每次访问 Google 时，都照样会进行重定向。</p></li><li><p>启用Cookie，为<a href="http://www.google.com/webhp">http://www.google.com/webhp</a> 设置书签。每次在您选择该书签时，都会转到 <a href="http://www.google.com/webhp">http://www.google.com/webhp</a>，它与 Google.com 完全相同。</p></li><li><p>启用Cookie，为<a href="http://www.google.com/ncr">http://www.google.com/ncr</a>  （ncr: no country redirect  不启用按国家跳转）设置书签。每次在您选择该书签时，都会转到 <a href="%20http://www.google.com/ncr">http://www.google.com/ncr</a>，它与 Google.com 完全相同。</p></li><li><p>各种浏览器中, 可以通过设置语言选项中, 添加英语并置为最上面</p></li><li><p>使用插件：<a href="http://kanoha.org/?fetchDownload=9">SkipGoogle.crx</a>，或者搜索下油猴之类的。</p></li><li><p>IP伪装成国外的或者肉身那个，大家都懂的。</p></li><li><p>google设置中把地理位置设为国外，语言么：设成英语。</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于国内google的重定向问题，想必使用google的用户都烦透了，当使用google搜索功能，点击搜索结果经常会出现对搜索结果重定向，有时候甚至打不开google的搜索结果。
    
    </summary>
    
      <category term="Web" scheme="https://www.nankor.org/categories/Web/"/>
    
    
      <category term="google redirect" scheme="https://www.nankor.org/tags/google-redirect/"/>
    
  </entry>
  
  <entry>
    <title>大峪游玩</title>
    <link href="https://www.nankor.org/Walk/04/20/otani-play.html"/>
    <id>https://www.nankor.org/Walk/04/20/otani-play.html</id>
    <published>2012-04-20T14:34:01.000Z</published>
    <updated>2017-06-18T15:27:08.529Z</updated>
    
    <content type="html"><![CDATA[<p>这次活动成行已经被拖延好几周了，来的晚总比没有来的好，虽然回来路上在雨里淋了一段，但还是玩的比较满意的，觉得要写点东西把4月19号的经历记录下来。<span id="more"></span></p><p>早上6点半，在床上坐起来想了想穿什么衣服，刚穿完衣服，<a href="http://www.thepunch.info/blog/">王宇</a>师兄就打手机过来催起床了。</p><p>7点到新科楼前发现大家都不在，自己应该是迟到了，孙师兄刚好也赶到，就相随去门口追大伙，在外面拿了三个包子，和30多人等公交车奔赴目的地。</p><p>大峪水库比较远，中间转了一趟车，然后坐923从起点到终点。</p><p><a href="http://maps.google.com/maps?f=q&source=embed&hl=zh-CN&geocode=&q=%E8%A5%BF%E5%AE%89+%E5%A4%A7%E5%B3%AA&aq=&sll=37.0625,-95.677068&sspn=46.946584,93.076172&ie=UTF8&hq=&hnear=%E4%B8%AD%E5%9B%BD%E9%99%95%E8%A5%BF%E7%9C%81%E8%A5%BF%E5%AE%89%E9%95%BF%E5%AE%89%E5%8C%BA%E5%A4%A7%E5%B3%AA%E4%B9%A1&ll=34.018954,109.119909&spn=0.024156,0.045447&t=m&z=14">查看大图</a></p><p>到达目的地大概9点吧，来的人比较多，同学是47个吧。本来目的是来捡垃圾的，所以一人发了一个垃圾袋与一只白手套。然后我们就兴冲冲出发了。</p><p>出发了！</p><p><a href="http://nankor.org/uploads/2012/04/%E5%87%BA%E5%8F%91.jpg"><img src="http://nankor.org/uploads/2012/04/%E5%87%BA%E5%8F%91.jpg"></a></p><p>下面是路上的一些见闻（由于没有带相机，只能从师兄师姐那里盗点图了。）：</p><p>拔地而起的高山：</p><p><a href="http://nankor.org/uploads/2012/04/hill.jpg"><img src="http://nankor.org/uploads/2012/04/hill.jpg"></a></p><p><a href="http://nankor.org/uploads/2012/04/%E5%B2%A9%E7%9F%B3.jpg"><img src="http://nankor.org/uploads/2012/04/%E5%B2%A9%E7%9F%B3.jpg"></a></p><p>山上的流水：</p><p><a href="http://nankor.org/uploads/2012/04/%E6%B0%B4%E6%B5%81.jpg"><img src="http://nankor.org/uploads/2012/04/%E6%B0%B4%E6%B5%81.jpg"></a>在路上：</p><p><a href="http://nankor.org/uploads/2012/04/ku1.jpg"><img src="http://nankor.org/uploads/2012/04/ku1.jpg"></a></p><p>还是在路上：</p><p><a href="http://nankor.org/uploads/2012/04/ku2.jpg"><img src="http://nankor.org/uploads/2012/04/ku2.jpg"></a></p><p>见到水库了：</p><p><a href="http://nankor.org/uploads/2012/04/%E5%A4%A7%E5%B3%AA%E6%B0%B4%E5%BA%93.jpg"><img src="http://nankor.org/uploads/2012/04/%E5%A4%A7%E5%B3%AA%E6%B0%B4%E5%BA%93.jpg"></a></p><p>平湖：</p><p><a href="http://nankor.org/uploads/2012/04/ku3.jpg"><img src="http://nankor.org/uploads/2012/04/ku3.jpg"></a></p><p><a href="http://nankor.org/uploads/2012/04/%E5%BA%932.jpg"><img src="http://nankor.org/uploads/2012/04/%E5%BA%932.jpg"></a></p><p><a href="http://nankor.org/uploads/2012/04/%E5%BA%931.jpg"><img src="http://nankor.org/uploads/2012/04/%E5%BA%931.jpg"></a></p><p><a href="http://nankor.org/uploads/2012/04/%E5%A4%A7%E5%B3%AA%E6%B0%B4%E5%BA%93%E7%AE%80%E4%BB%8B.jpg"><img src="http://nankor.org/uploads/2012/04/%E5%A4%A7%E5%B3%AA%E6%B0%B4%E5%BA%93%E7%AE%80%E4%BB%8B.jpg"></a></p><p>碰到的烈士陵园:</p><p><a href="http://nankor.org/uploads/2012/04/%E7%83%88%E5%A3%AB1.jpg"><img src="http://nankor.org/uploads/2012/04/%E7%83%88%E5%A3%AB1.jpg"></a></p><p>路上的付老师和马老师：</p><p><a href="http://nankor.org/uploads/2012/04/%E9%A9%AC%E8%80%81%E5%B8%88%E5%92%8C%E4%BB%98%E8%80%81%E5%B8%88.jpg"><img src="http://nankor.org/uploads/2012/04/%E9%A9%AC%E8%80%81%E5%B8%88%E5%92%8C%E4%BB%98%E8%80%81%E5%B8%88.jpg"></a></p><p>在路上，走的比较靠前，和蒋老师聊了会儿天，蒋老师说，今天的目标是10000步，老人家真带着计步器呢</p><p><a href="http://nankor.org/uploads/2012/04/%E8%92%8B%E8%80%81%E5%B8%88.jpg"><img src="http://nankor.org/uploads/2012/04/%E8%92%8B%E8%80%81%E5%B8%88.jpg"></a></p><p>除了半路业余式的捡些垃圾，我们主要还是看好那里的鳟鱼的，要吃午饭的农家乐就是我们徒步的终点与重点。</p><p>农家乐：</p><p><a href="http://nankor.org/uploads/2012/04/%E6%AC%A2%E8%BF%8E%E5%86%8D%E6%AC%A1%E5%85%89%E4%B8%B4.jpg"><img src="http://nankor.org/uploads/2012/04/%E6%AC%A2%E8%BF%8E%E5%86%8D%E6%AC%A1%E5%85%89%E4%B8%B4.jpg"></a></p><p>到达半山中的农家乐大概才11点吧，和几个同级同学与师兄玩了会纸牌，就开始吃午饭了。</p><p>下面是午饭的主角儿：</p><p> <a href="http://nankor.org/uploads/2012/04/%E8%99%B9%E9%B3%9F.jpg"><img src="http://nankor.org/uploads/2012/04/%E8%99%B9%E9%B3%9F.jpg"></a></p><p>没有把那盘鱼给留下来做个纪念。饭间又认识了几位师兄与师姐，很尴尬的是把一位学姐当大四的了。</p><p>如果说以上算平淡的游玩，下面的就有些意思了：吃完饭几个同学商量去爬山，自己没有仔细考虑就欣然同意前去了。</p><p>和老祝走在盘山公路的前面为大家探山，之所以说探山，这里的山由于被盘山公路切开，没有直接从地面形成斜坡的，很多是拔地而起，我们要找个坡度合适的、时间上来的及的打下“牙祭”。看到由两位可能是采药的人在山上“逛荡”（真觉得他们很轻松的在山上），我们敲定了就爬她们所在的山。</p><p>探山路上：</p><p><a href="http://nankor.org/uploads/2012/04/%E6%8E%A2%E5%B1%B1%E8%B7%AF%E4%B8%8A.jpg"><img src="http://nankor.org/uploads/2012/04/%E6%8E%A2%E5%B1%B1%E8%B7%AF%E4%B8%8A.jpg"></a></p><p>去寻山路，居然没有路，我们几个男生就成为了开路着。奇岩怪石，山间荆棘遍地，巨石硕大如房屋，在没有路的野山中，披荆斩棘，望山寻路，虽然被刮伤了几处，不过路倒是开得挺顺当。随行大概20多人吧，像攀岩般体验了这次冒险，一路坎坷，大有野山寻古墓的阵势，让我不断想起《盗墓笔记》与说列宁的《日出》那段。</p><p>时间有限，下山还有坐公交车，爬到一处平台，大家感觉爬的差不多了，拍照留纪念，准备下山。其实这山本就是让看的，爬起来像是在挑战这座山一样。</p><p>山间平台留影：</p><p><a href="http://nankor.org/uploads/2012/04/%E5%B9%B3%E5%8F%B0%E4%BC%91%E6%81%AF.jpg"><img src="http://nankor.org/uploads/2012/04/%E5%B9%B3%E5%8F%B0%E4%BC%91%E6%81%AF.jpg"></a></p><p>下山就没什么了，蹦崩跳跳的就下来了。不过人太多，还是注意安全好。</p><p>回到半腰的农家乐休息了一会儿，看天色不好我们就向山脚下赶了。</p><p>回来路上和几个同学，沿盘山公路一路开跑狂奔，好不欢乐！结果是枫姐拿个对讲机使劲追我们，不断向断后的王宇报告我们的行踪。</p><p>中间有段路，因为喝水太多了，跑起来腹中排山倒海，只能慢下来了，从第一集团跌入第二集团。</p><p>走在山谷间，闲暇的带着耳机一边听着班德瑞一边淋着雨，漫步中观察着一座座欲比天的青峰，想着再静也不过如此了。</p><p>不知觉间居然被枫姐赶超了，好吧，继续狂奔。</p><p>功夫不负有心人，和大四的同学一起首先回到山脚下，坐上公交除了脚底疼什么感觉都没了。</p><p>时间不早了，明天写些感受吧，上面纯是流水。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这次活动成行已经被拖延好几周了，来的晚总比没有来的好，虽然回来路上在雨里淋了一段，但还是玩的比较满意的，觉得要写点东西把4月19号的经历记录下来。
    
    </summary>
    
      <category term="Walk" scheme="https://www.nankor.org/categories/Walk/"/>
    
    
      <category term="大峪" scheme="https://www.nankor.org/tags/%E5%A4%A7%E5%B3%AA/"/>
    
      <category term="虹鳟" scheme="https://www.nankor.org/tags/%E8%99%B9%E9%B3%9F/"/>
    
  </entry>
  
</feed>
